<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtf.framework.dao.User2ActionMapper">
	<resultMap id="BaseResultMap" type="User2Action">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="userId" property="userId" jdbcType="CHAR" />
		<result column="actionId" property="actionId" jdbcType="CHAR" />
		<result column="allow" property="allow" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="WithActionResultMap" type="User2Action" extends="BaseResultMap">
		<association property="action" javaType="Action">
			<id column="C_ACTION_ACTION_ID" property="id" jdbcType="CHAR" />
			<result column="C_ACTION_NAME" property="name" jdbcType="VARCHAR" />
			<result column="C_ACTION_DESCRIPTION" property="description" jdbcType="VARCHAR" />
			<result column="C_ACTION_LEVEL" property="level" jdbcType="INTEGER" />
			<result column="C_ACTION_SYSTEM" property="system" jdbcType="INTEGER" />
			<result column="C_ACTION_STATUS" property="status" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		id, userId, actionId, allow
	</sql>
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM userAction
		WHERE id = #{id,jdbcType=CHAR}
	</select>
	<select id="selectByIdWithAction" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		userAction.id,
		userAction.userId,
		userAction.actionId,
		userAction.allow,
		action.id AS C_ACTION_ACTION_ID,
		action.name AS C_ACTION_NAME,
		action.description AS C_ACTION_DESCRIPTION,
		action.level AS C_ACTION_LEVEL,
		action.system AS C_ACTION_SYSTEM,
		action.status AS C_ACTION_STATUS
		FROM userAction
		INNER JOIN action ON action.id = userAction.actionId
		WHERE userAction.id = #{id,jdbcType=CHAR}
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM userAction
		WHERE userId = #{userId,jdbcType=CHAR}
	</select>
	<select id="selectByUserIdWithAction" resultMap="WithActionResultMap" parameterType="java.lang.String">
		SELECT
		userAction.id,
		userAction.userId,
		userAction.actionId,
		userAction.allow,
		action.id AS C_ACTION_ACTION_ID,
		action.name AS C_ACTION_NAME,
		action.description AS C_ACTION_DESCRIPTION,
		action.level AS C_ACTION_LEVEL,
		action.system AS C_ACTION_SYSTEM,
		action.status AS C_ACTION_STATUS
		FROM userAction
		INNER JOIN action ON action.id = userAction.actionId
		WHERE userAction.userId = #{userId,jdbcType=CHAR}
	</select>
	<select id="selectByUserIdAndActionId" resultMap="BaseResultMap" parameterType="User2Action">
		SELECT
		<include refid="Base_Column_List" />
		FROM userAction
		WHERE userId = #{userId,jdbcType=CHAR}
		AND actionId = #{actionId,jdbcType=CHAR}
	</select>
	<select id="countByUserIdAndActionId" resultType="int" parameterType="User2Action">
		SELECT COUNT(id)
		FROM userAction
		WHERE userId = #{userId,jdbcType=CHAR}
		AND actionId = #{actionId,jdbcType=CHAR}
	</select>
	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM userAction
		WHERE id = #{id,jdbcType=CHAR}
	</delete>
	<delete id="deleteByActionId" parameterType="java.lang.String">
		DELETE FROM userAction
		WHERE actionId = #{actionId,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="User2Action">
		INSERT into userAction (id, userId, actionId, allow)
		values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{actionId,jdbcType=CHAR}, #{allow,jdbcType=INTEGER})
	</insert>
	<update id="updateById" parameterType="User2Action">
		UPDATE userAction
		SET userId = #{userId,jdbcType=CHAR},
		actionId = #{actionId,jdbcType=CHAR},
		allow = #{allow,jdbcType=INTEGER}
		WHERE id = #{id,jdbcType=CHAR}
	</update>
	
	<update id="updateAllowById" parameterType="User2Action">
		UPDATE userAction
		SET allow = #{allow,jdbcType=INTEGER}
		WHERE id = #{id,jdbcType=CHAR}
	</update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtf.framework.dao.DivisionConditionMapper">
	<resultMap type="com.mtf.framework.model.impl.DivisionImpl" id="division"/> 
	<resultMap id="BaseResultMap" type="Division">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="nameEng" property="nameEng" jdbcType="VARCHAR" />
		<result column="depTitle" property="depTitle" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="pid" property="pid" jdbcType="CHAR" />
		<result column="tag" property="tag" jdbcType="CHAR" />
		<result column="userId" property="userId" jdbcType="CHAR" />
		<result column="dateTime" property="datetime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="level" property="level" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, nameEng, depTitle, description, pid, tag, userId, dateTime, status, level
	</sql>
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM division
		WHERE id = #{id,jdbcType=CHAR}
	</select>
	<select id="select" resultMap="BaseResultMap" parameterType="Division">
		SELECT
		<include refid="Base_Column_List" />
		FROM division
		WHERE tag = #{tag}
		AND status = #{status}
		<if test="level != null and level != ''">
			AND level = #{level}
		</if>
		order by division.name
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM division
		WHERE tag != "g"
		ORDER BY tag ASC
	</select>
	
	<select id="selectForDivisionGroup" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM division
		WHERE tag = #{tag}
		ORDER BY name ASC
	</select>
	<select id="countByName" resultType="int" parameterType="java.lang.String">
		SELECT COUNT(id)
		FROM division
		WHERE tag = "g"
		AND name = #{name,jdbcType=VARCHAR}
	</select>
	<select id="selectAllGroup" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM division
		WHERE tag = "g"
		ORDER BY name ASC
	</select>
	<select id="selectByCategoryId" resultMap="BaseResultMap">
		SELECT
			cd.id,
			d.name,
			nameEng,
			depTitle,
			d.description,
			d.pid,
			d.tag,
			d.status
		FROM division d
		LEFT JOIN categoryDivision cd ON d.id = cd.divisionId
		WHERE 1 = 1
		<if test="categoryId != null">
			AND cd.categoryId=#{categoryId,jdbcType=INTEGER}
		</if>
		AND d.tag="g"
		ORDER BY d.name ASC
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		division.id,
		division.name,
		nameEng,
		depTitle,
		level,
		division.description,
		division.pid,
		division.tag,
		division.userId,
		division.dateTime,
		division.status
		FROM division
		
		INNER JOIN userDivision ON division.id = userDivision.divisionId
		WHERE division.tag = "d"
		AND userDivision.userId = #{userId,jdbcType=CHAR}
		ORDER BY division.name ASC
	</select>
	<select id="selectByTagOnly" resultMap="division">
		SELECT
			CASE WHEN division.level = 3 AND (division.pid != '')
			THEN 'closed'
			WHEN division.level = 1 AND (division.tag = 'c')
			THEN 'closed'
			ELSE NULL 
			END AS state,
			<include refid="Base_Column_List" />
		FROM division
		WHERE 1 = 1
		AND status = "0"
		<if test="tag != null and tag != ''">
			AND tag = #{tag}
		</if>
		ORDER BY name ASC
	</select>
	<select id="selectByTag" resultMap="division">
		SELECT
			CASE WHEN division.level = 3 AND (division.pid != '')
			THEN 'closed'
			WHEN division.level = 1 AND (division.tag = 'c')
			THEN 'closed'
			ELSE NULL 
			END AS state,
		<include refid="Base_Column_List" />
		FROM division
		WHERE 1 = 1
		AND status = "0"
		<if test="tag != null and tag != ''">
			AND tag = #{tag}
		</if>
		ORDER BY name ASC
	</select>
	<select id="selectDivisionTree" resultMap="division">
		SELECT
			CASE WHEN  
				division.level = 1
			THEN 
				'closed'
			ELSE 
				NULL 
			END AS state,
		<include refid="Base_Column_List" />
		FROM division
		WHERE 1 = 1
		AND status = "0"
		<if test="tag != null and tag != ''">
			AND tag = #{tag}
		</if>
		ORDER BY name ASC
	</select>
	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM division
		WHERE id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="Division">
		INSERT INTO division (id, name, nameEng, depTitle, description, pid, tag, userId, dateTime, status, level)
		VALUES (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{nameEng,jdbcType=VARCHAR}, #{depTitle,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
		#{pid,jdbcType=CHAR}, #{tag}, #{userId,jdbcType=CHAR}, #{datetime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{level,jdbcType=INTEGER})
	</insert>
	<update id="updateById" parameterType="Division">
		UPDATE division
		SET 
		name = #{name,jdbcType=VARCHAR},
		nameEng = #{nameEng,jdbcType=VARCHAR},
		depTitle = #{depTitle,jdbcType=VARCHAR},
		description = #{description,jdbcType=CHAR},
		pid = #{pid,jdbcType=CHAR},
		tag = #{tag,jdbcType=CHAR},
		userId = #{userId,jdbcType=CHAR},
		dateTime = #{datetime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		level = #{level,jdbcType=INTEGER}
		WHERE id = #{id,jdbcType=CHAR}
	</update>
	
	<!-- extra -->
	<select id="selectAllGroupForCategory" resultMap="BaseResultMap">
		SELECT  DISTINCT d.id, d.name, d.nameEng, d.description, 0 AS status 
		FROM division d 
		WHERE d.tag = "g"
		ORDER BY d.name ASC
	</select>
	<select id="countGroupByCategoryId" resultType="int" >
		SELECT  COUNT(DISTINCT d.id)
		FROM division d
		INNER JOIN categoryDivision cd ON d.id = cd.divisionId 
		WHERE d.tag = "g"
		AND cd.categoryId = #{categoryId,jdbcType=INTEGER}
	</select>
	<select id="selectGroupByCategoryId" resultMap="BaseResultMap">
		SELECT temp.id, temp.name, temp.description, SUM(temp.status) AS status 
		FROM
		(
			SELECT DISTINCT d.id, d.name, d.description, 1 AS status 
			FROM division d
			INNER JOIN categoryDivision cd ON d.id = cd.divisionId 
			WHERE d.tag = "g"
			AND cd.categoryId = #{categoryId,jdbcType=INTEGER}
			Union All 
			SELECT  DISTINCT d.id, d.name, d.description, 0 AS status 
			FROM division d
			INNER JOIN categoryDivision cd ON d.id != cd.divisionId 
			WHERE d.tag = "g"
			AND cd.categoryId = #{categoryId,jdbcType=INTEGER}
		) AS temp
		GROUP BY temp.id
		ORDER BY temp.name ASC
	</select>
	
	<sql id="getColumn">
		
	</sql>

	<sql id="getFrom">
		
	</sql>

	<sql id="getWhere">
		
	</sql>

	<sql id="selectColumn">
		CASE WHEN a.tag = 'c' AND (a.pid = '' OR a.pid IS NULL) 
		THEN 'closed'
		ELSE NULL 
		END AS state,
	</sql>

	<sql id="selectFrom">
		
	</sql>

	<sql id="selectWhere">
	</sql>

	<sql id="countFrom">
		
	</sql>

	<sql id="searchFrom">
	
	</sql>

	<sql id="countWhere">
		
	</sql>

	<sql id="searchWhere">
		<if test="tagStatus0 != null and tagStatus0 != ''">
			AND a.status = 0
		</if>
		<if test="tagMapper == 'doListDivisionAll'">
			AND a.`status` =  #{status}
		</if>			
	</sql>

	<sql id="updateColumn">
		
	</sql>

	<sql id="updateWhere">
		id = #{id}
	</sql>	
</mapper>
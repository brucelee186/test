<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.framework.dao.ReimbursementMapper" > 
	<resultMap type="com.mtf.framework.model.impl.ReimbursementImpl" id="reimbursement"/>
	<resultMap id="ReimbursementMapper" type="ReimbursementImpl">
		<id property="id" column="id" jdbcType="VARCHAR"/>
		<id property="no" column="no"  jdbcType="INTEGER"/>
		<id property="applicantId" column="applicantId" jdbcType="VARCHAR" />
		<id property="applicantName" column="applicantName" jdbcType="VARCHAR"/>
		<id property="applicantDivisionId" column="applicantDivisionId" jdbcType="VARCHAR"/>
		<id property="applicantDivisionName" column="applicantDivisionName" jdbcType="VARCHAR"/>
		<id property="applicantDivisionDate" column="applicantDivisionDate" jdbcType="TIMESTAMP"/>
		<id property="payeeName" column="payeeName" jdbcType="VARCHAR"/>
		<id property="totalAmount" column="totalAmount" jdbcType="DOUBLE"/>
		<id property="currencyId" column="currencyId" jdbcType="VARCHAR"/>
		<id property="exchangeRate" column="exchangeRate" jdbcType="DOUBLE"/>
		<id property="totalRmbAmount" column="totalRmbAmount" jdbcType="DOUBLE"/>
		<id property="actualTotalAmount" column="actualTotalAmount" jdbcType="DOUBLE"/>
		<id property="signerId" column="signerId" jdbcType="VARCHAR"/>
		<id property="signerName" column="signerName" jdbcType="VARCHAR"/>
		<id property="auditorId" column="auditorId" jdbcType="VARCHAR"/>
		<id property="auditorName" column="auditorName" jdbcType="VARCHAR"/>
		<id property="isAudited" column="isAudited" jdbcType="INTEGER"/>
		<id property="auditDate" column="auditDate" jdbcType="TIMESTAMP"/>
		<id property="isExportFlex" column="isExportFlex" jdbcType="INTEGER"/>
		<id property="status" column="status" jdbcType="INTEGER"/>
		<id property="createUserId" column="createUserId" jdbcType="VARCHAR"/>
		<id property="createUserName" column="createUserName" jdbcType="VARCHAR"/>
		<id property="createDatetime" column="createDatetime" jdbcType="TIMESTAMP"/>
		<id property="updateUserId" column="updateUserId" jdbcType="VARCHAR"/>
		<id property="updateUserName" column="updateUserName" jdbcType="VARCHAR"/>
		<id property="updateDatetime" column="updateDatetime" jdbcType="TIMESTAMP"/>
		<id property="sumTotalAmount" column="sum_totalAmount" jdbcType="DOUBLE"/>
		<id property="monthApplicantDatetime" column="month_applicantDatetime" jdbcType="VARCHAR"/>
		<id property="yearApplicantDatetime" column="year_applicantDatetime" jdbcType="VARCHAR"/>
		<id property="quarterApplicantDatetime" column="quarter_applicantDatetime" jdbcType="VARCHAR"/>
		<id property="mainCategory1Name" column="main_category1Name" jdbcType="VARCHAR"/>
		<id property="divisionName" column="divisionName" jdbcType="VARCHAR"/>
		<id property="customerName" column="customerName" jdbcType="VARCHAR"/>
		<id property="category1Name" column="category1Name" jdbcType="VARCHAR"/>
		<id property="category2Name" column="category2Name" jdbcType="VARCHAR"/>
		<id property="description" column="description" jdbcType="VARCHAR"/>
		<id property="amount" column="amount" jdbcType="DOUBLE"/>
		<id property="sumTotalRmbAmount" column="sum_totalRmbAmount" jdbcType="DOUBLE"/>
		<id property="dyf" column="dyf" jdbcType="DOUBLE"/>
		<id property="dzyhp" column="dzyhp" jdbcType="DOUBLE"/>
		<id property="jbfy" column="jbfy" jdbcType="DOUBLE"/>
		<id property="zdf" column="zdf" jdbcType="DOUBLE"/>
		<id property="cf" column="cf" jdbcType="DOUBLE"/>
		<id property="gyfy" column="gyfy" jdbcType="DOUBLE"/>
		<id property="swf" column="swf" jdbcType="DOUBLE"/>
		<id property="clf" column="clf" jdbcType="DOUBLE"/>
		<id property="wxf" column="wxf" jdbcType="DOUBLE"/>
		<id property="bgf" column="bgf" jdbcType="DOUBLE"/>
		<id property="zc" column="zc" jdbcType="DOUBLE"/>
		<id property="pxfy" column="pxfy" jdbcType="DOUBLE"/>
		<id property="customerTotal" column="customer_total" jdbcType="DOUBLE"/>
		<id property="divisionTotal" column="division_total" jdbcType="DOUBLE"/>
	</resultMap>
	<resultMap id="WithReimbursementItem" type="ReimbursementImpl" extends="ReimbursementMapper">
		<collection property="listReimbursementItem" javaType="java.util.List" ofType="ReimbursementItemImpl">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="item_description" property="description" jdbcType="VARCHAR" />
			<result column="item_divisionId" property="divisionId" jdbcType="VARCHAR" />
			<result column="item_divisionName" property="divisionName" jdbcType="VARCHAR" />
			<result column="item_customerId" property="customerId" jdbcType="VARCHAR" />
			<result column="item_customerName" property="customerName" jdbcType="VARCHAR" />
			<result column="item_amount" property="amount" jdbcType="DOUBLE" />
			<result column="item_category1Id" property="category1Id" jdbcType="VARCHAR" />
			<result column="item_category1Name" property="category1Name" jdbcType="VARCHAR" />
			<result column="item_category2Id" property="category2Id" jdbcType="VARCHAR" />
			<result column="item_category2Name" property="category2Name" jdbcType="VARCHAR" />
			<result column="item_index" property="index" jdbcType="INTEGER" />
		</collection>
	</resultMap> 
	<!-- 添加实体对象 -->
	<insert id="insert" parameterType="reimbursement">
		INSERT INTO reimbursement
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					id,
				</if>
				<if test="no != null">
					no,
				</if>
				<if test="applicantId != null">
					applicantId,
				</if>
				<if test="applicantName != null">
					applicantName,
				</if>
				<if test="applicantDivisionId != null">
					applicantDivisionId,
				</if>
				<if test="applicantDivisionName != null">
					applicantDivisionName,
				</if>
				<if test="applicantDivisionDate != null">
					applicantDivisionDate,
				</if>
				<if test="payeeName != null">
					payeeName,
				</if>
				<if test="totalAmount != null">
					totalAmount,
				</if>
				<if test="currencyId != null">
					currencyId,
				</if>
				<if test="exchangeRate != null">
					exchangeRate,
				</if>
				<if test="totalRmbAmount != null">
					totalRmbAmount,
				</if>
				<if test="actualTotalAmount != null">
					actualTotalAmount,
				</if>
				<if test="signerId != null">
					signerId,
				</if>
				<if test="signerName != null">
					signerName,
				</if>
				<if test="auditorId != null">
					auditorId,
				</if>
				<if test="auditorName != null">
					auditorName,
				</if>
				<if test="isAudited != null">
					isAudited,
				</if>
				<if test="auditDate != null">
					auditDate,
				</if>
				<if test="isExportFlex != null">
					isExportFlex,
				</if>
				<if test="status != null">
					status,
				</if>
				<if test="createUserId != null">
					createUserId,
				</if>
				<if test="createUserName != null">
					createUserName,
				</if>
				<if test="createDatetime != null">
					createDatetime,
				</if>
				<if test="updateUserId != null">
					updateUserId,
				</if>
				<if test="updateUserName != null">
					updateUserName,
				</if>
				<if test="updateDatetime != null">
					updateDatetime,
				</if>
			</trim>
			<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
				<if test="id != null">
					#{id},
				</if>
				<if test="no != null">
					#{no},
				</if>
				<if test="applicantId != null">
					#{applicantId},
				</if>
				<if test="applicantName != null">
					#{applicantName},
				</if>
				<if test="applicantDivisionId != null">
					#{applicantDivisionId},
				</if>
				<if test="applicantDivisionName != null">
					#{applicantDivisionName},
				</if>
				<if test="applicantDivisionDate != null">
					#{applicantDivisionDate},
				</if>
				<if test="payeeName != null">
					#{payeeName},
				</if>
				<if test="totalAmount != null">
					#{totalAmount},
				</if>
				<if test="currencyId != null">
					#{currencyId},
				</if>
				<if test="exchangeRate != null">
					#{exchangeRate},
				</if>
				<if test="totalRmbAmount != null">
					#{totalRmbAmount},
				</if>
				<if test="actualTotalAmount != null">
					#{actualTotalAmount},
				</if>
				<if test="signerId != null">
					#{signerId},
				</if>
				<if test="signerName != null">
					#{signerName},
				</if>
				<if test="auditorId != null">
					#{auditorId},
				</if>
				<if test="auditorName != null">
					#{auditorName},
				</if>
				<if test="isAudited != null">
					#{isAudited},
				</if>
				<if test="auditDate != null">
					#{auditDate},
				</if>
				<if test="isExportFlex != null">
					#{isExportFlex},
				</if>
				<if test="status != null">
					#{status},
				</if>
				<if test="createUserId != null">
					#{createUserId},
				</if>
				<if test="createUserName != null">
					#{createUserName},
				</if>
				<if test="createDatetime != null">
					#{createDatetime},
				</if>
				<if test="updateUserId != null">
					#{updateUserId},
				</if>
				<if test="updateUserName != null">
					#{updateUserName},
				</if>
				<if test="updateDatetime != null">
					#{updateDatetime},
				</if>
			</trim>
<!-- 			<selectKey resultType="long" keyProperty="id">
				SELECT LAST_INSERT_ID() AS ID
			</selectKey> -->
	</insert>

	<!-- 删除实体对象 -->
	<delete id="delete" parameterType="java.lang.Object">
		DELETE FROM reimbursement
		WHERE
			id = #{id}
	</delete>
	
	<!-- 更新实体对象 -->
	<update id="update" parameterType="java.lang.Object">
		UPDATE reimbursement
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="no != null">
				no = #{no},
			</if>
			<if test="applicantId != null">
				applicantId = #{applicantId},
			</if>
			<if test="applicantName != null">
				applicantName = #{applicantName},
			</if>
			<if test="applicantDivisionId != null">
				applicantDivisionId = #{applicantDivisionId},
			</if>
			<if test="applicantDivisionName != null">
				applicantDivisionName = #{applicantDivisionName},
			</if>
			<if test="applicantDivisionDate != null">
				applicantDivisionDate = #{applicantDivisionDate},
			</if>
			<if test="payeeName != null">
				payeeName = #{payeeName},
			</if>
			<if test="totalAmount != null">
				totalAmount = #{totalAmount},
			</if>
			<if test="currencyId != null">
				currencyId = #{currencyId},
			</if>
			<if test="exchangeRate != null">
				exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="actualTotalAmount != null">
				actualTotalAmount = #{actualTotalAmount},
			</if>
			<if test="signerId != null">
				signerId = #{signerId},
			</if>
			<if test="signerName != null">
				signerName = #{signerName},
			</if>
			<if test="auditorId != null">
				auditorId = #{auditorId},
			</if>
			<if test="auditorName != null">
				auditorName = #{auditorName},
			</if>
			<if test="isAudited != null">
				isAudited = #{isAudited},
			</if>
			<if test="auditDate != null">
				auditDate = #{auditDate},
			</if>
			<if test="isExportFlex != null">
				isExportFlex = #{isExportFlex},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="createUserId != null">
				createUserId = #{createUserId},
			</if>
			<if test="createUserName != null">
				createUserName = #{createUserName},
			</if>
			<if test="createDatetime != null">
				createDatetime = #{createDatetime},
			</if>
			<if test="updateUserId != null">
				updateUserId = #{updateUserId},
			</if>
			<if test="updateUserName != null">
				updateUserName = #{updateUserName},
			</if>
			<if test="updateDatetime != null">
				updateDatetime = #{updateDatetime},
			</if>
		</set>
		WHERE
			id = #{id}
			<if test="original != null">
				 AND modified = #{original}
			</if>
	</update>

	<!-- 查询单个实体对象 -->
	<select id="get" parameterType="java.lang.Object" resultMap="reimbursement">
		SELECT 
			id, 
			no, 
			applicantId, 
			applicantName, 
			applicantDivisionId, 
			applicantDivisionName, 
			applicantDivisionDate, 
			payeeName, 
			totalAmount, 
			currencyId,
			exchangeRate,
			totalRmbAmount,
			actualTotalAmount,
			signerId, 
			signerName, 
			auditorId, 
			auditorName, 
			isAudited, 
			auditDate, 
			isExportFlex, 
			status, 
			createUserId, 
			createUserName, 
			createDatetime, 
			updateUserId, 
			updateUserName, 
			updateDatetime
		FROM reimbursement
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="no != null">
				AND no = #{no}
			</if>
			<if test="applicantId != null">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantDivisionId != null">
				AND applicantDivisionId = #{applicantDivisionId}
			</if>
			<if test="applicantDivisionName != null">
				AND applicantDivisionName = #{applicantDivisionName}
			</if>
			<if test="applicantDivisionDate != null">
				AND applicantDivisionDate = #{applicantDivisionDate}
			</if>
			<if test="payeeName != null">
				AND payeeName = #{payeeName}
			</if>
			<if test="totalAmount != null">
				AND totalAmount = #{totalAmount}
			</if>
			<if test="signerId != null">
				AND signerId = #{signerId}
			</if>
			<if test="signerName != null">
				AND signerName = #{signerName}
			</if>
			<if test="auditorId != null">
				AND auditorId = #{auditorId}
			</if>
			<if test="auditorName != null">
				AND auditorName = #{auditorName}
			</if>
			<if test="isAudited != null">
				AND isAudited = #{isAudited}
			</if>
			<if test="auditDate != null">
				AND auditDate = #{auditDate}
			</if>
			<if test="isExportFlex != null">
				AND isExportFlex = #{isExportFlex}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="createUserId != null">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null">
				AND updateDatetime = #{updateDatetime}
			</if>
		</where>
		LIMIT 1
	</select>

	<!-- 查询实体对象集合 -->
	<select id="select" parameterType="java.lang.Object" resultMap="reimbursement">
		SELECT 
			id, 
			no, 
			applicantId, 
			applicantName, 
			applicantDivisionId, 
			applicantDivisionName, 
			applicantDivisionDate, 
			payeeName, 
			totalAmount, 
			currencyId,
			exchangeRate,
			totalRmbAmount, 
			actualTotalAmount, 
			signerId, 
			signerName, 
			auditorId, 
			auditorName, 
			isAudited, 
			auditDate, 
			isExportFlex, 
			status, 
			createUserId, 
			createUserName, 
			createDatetime, 
			updateUserId, 
			updateUserName, 
			updateDatetime
		FROM reimbursement
		<where>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="no != null and no != ''">
				AND no = #{no}
			</if>
			<if test="applicantId != null and applicantId != ''">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null and applicantName != ''">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantDivisionId != null and applicantDivisionId != ''">
				AND applicantDivisionId = #{applicantDivisionId}
			</if>
			<if test="applicantDivisionName != null and applicantDivisionName != ''">
				AND applicantDivisionName = #{applicantDivisionName}
			</if>
			<if test="applicantDivisionDate != null and applicantDivisionDate != ''">
				AND applicantDivisionDate = #{applicantDivisionDate}
			</if>
			<if test="payeeName != null and payeeName != ''">
				AND payeeName = #{payeeName}
			</if>
			<if test="totalAmount != null and totalAmount != ''">
				AND totalAmount = #{totalAmount}
			</if>
			<if test="currencyId != null and currencyId != ''">
				AND currencyId = #{currencyId}
			</if>
			<if test="exchangeRate != null">
				AND exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				AND totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="actualTotalAmount != null">
				AND actualTotalAmount = #{actualTotalAmount},
			</if>
			<if test="signerId != null and signerId != ''">
				AND signerId = #{signerId}
			</if>
			<if test="signerName != null and signerName != ''">
				AND signerName = #{signerName}
			</if>
			<if test="auditorId != null and auditorId != ''">
				AND auditorId = #{auditorId}
			</if>
			<if test="auditorName != null and auditorName != ''">
				AND auditorName = #{auditorName}
			</if>
			<if test="isAudited != null and isAudited != ''">
				AND isAudited = #{isAudited}
			</if>
			<if test="auditDate != null and auditDate != ''">
				AND auditDate = #{auditDate}
			</if>
			<if test="isExportFlex != null and isExportFlex != ''">
				AND isExportFlex = #{isExportFlex}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="createUserId != null and createUserId != ''">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null and createUserName != ''">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null and createDatetime != ''">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null and updateUserName != ''">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null and updateDatetime != ''">
				AND updateDatetime = #{updateDatetime}
			</if>
			<if test="sort != null">
				ORDER BY ${sort} ${order}
			</if>
		</where>
		<if test="rows != 0">
			LIMIT ${startIndex}, ${rows}
		</if>
	</select>

	<!-- 查询实体对象记录数 -->
	<select id="count" parameterType="java.lang.Object" resultType="int">
		SELECT COUNT(1) FROM reimbursement
		<where>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="no != null and no != ''">
				AND no = #{no}
			</if>
			<if test="applicantId != null and applicantId != ''">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null and applicantName != ''">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantDivisionId != null and applicantDivisionId != ''">
				AND applicantDivisionId = #{applicantDivisionId}
			</if>
			<if test="applicantDivisionName != null and applicantDivisionName != ''">
				AND applicantDivisionName = #{applicantDivisionName}
			</if>
			<if test="applicantDivisionDate != null and applicantDivisionDate != ''">
				AND applicantDivisionDate = #{applicantDivisionDate}
			</if>
			<if test="payeeName != null and payeeName != ''">
				AND payeeName = #{payeeName}
			</if>
			<if test="totalAmount != null and totalAmount != ''">
				AND totalAmount = #{totalAmount}
			</if>
			<if test="currencyId != null and currencyId != ''">
				AND currencyId = #{currencyId}
			</if>
			<if test="exchangeRate != null">
				AND exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				AND totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="actualTotalAmount != null">
				AND actualTotalAmount = #{actualTotalAmount},
			</if>
			<if test="signerId != null and signerId != ''">
				AND signerId = #{signerId}
			</if>
			<if test="signerName != null and signerName != ''">
				AND signerName = #{signerName}
			</if>
			<if test="auditorId != null and auditorId != ''">
				AND auditorId = #{auditorId}
			</if>
			<if test="auditorName != null and auditorName != ''">
				AND auditorName = #{auditorName}
			</if>
			<if test="isAudited != null and isAudited != ''">
				AND isAudited = #{isAudited}
			</if>
			<if test="auditDate != null and auditDate != ''">
				AND auditDate = #{auditDate}
			</if>
			<if test="isExportFlex != null and isExportFlex != ''">
				AND isExportFlex = #{isExportFlex}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="createUserId != null and createUserId != ''">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null and createUserName != ''">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null and createDatetime != ''">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null and updateUserName != ''">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null and updateDatetime != ''">
				AND updateDatetime = #{updateDatetime}
			</if>
		</where>
	</select>
	
	<select id="selectWithItem" parameterType="java.lang.Object" resultMap="WithReimbursementItem" >
		SELECT 
			rb.*,
			rbi.id AS item_id,
			rbi.description  AS item_description,
			rbi.divisionId AS item_divisionId, 
			rbi.divisionName AS item_divisionName,
			rbi.customerId AS item_customerId,
			rbi.customerName AS item_customerName,
			rbi.amount AS item_amount,
			rbi.category1Id AS item_category1Id,
			rbi.category1Name AS item_category1Name,
			rbi.category2Id AS item_category2Id,
			rbi.category2Name AS item_category2Name,
			rbi.index AS item_index
			FROM
			(
				select * From reimbursement
				WHERE 1 = 1
				<if test="record != null" >
					<if test="record.createUserId != null and record.createUserId != ''">
						AND createUserId = #{record.createUserId}
					</if>
					<if test="record.no != null and record.no != ''">
						AND no LIKE CONCAT('%', CONCAT(#{record.no}, '%'))
					</if>
					<if test="record.applicantName != null and record.applicantName != ''">
						AND applicantName LIKE CONCAT('%', CONCAT(#{record.applicantName}, '%'))
					</if>
					<if test="record.applicantDivisionId != null and record.applicantDivisionId != ''">
						AND applicantDivisionId = #{record.applicantDivisionId}
					</if>
					<if test="record.isExportFlex != null ">
						AND isExportFlex = #{record.isExportFlex}
					</if>
					<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
						 AND UNIX_TIMESTAMP(applicantDivisionDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
					</if>
					<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
						 AND UNIX_TIMESTAMP(applicantDivisionDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
					</if>
					<if test="record.statusGroup != null and record.statusGroup != ''">
						<choose>
							<when test="record.statusGroup == 1">
								AND status in(0, 1, 2, 3)
							</when>
							<when test="record.statusGroup == 2">
								AND status in(1, 2)
							</when>
 							<otherwise> 
								AND 1 = 2
							</otherwise>
						</choose>
					</if>
					<if test="record.statusGroup == null or record.statusGroup == ''">
							AND 1 = 2
					</if>
				</if>
				<if test="statuses != null" >
					AND status IN
					<foreach collection="statuses" item="status" open="(" separator="," close=")">
						#{status}
					</foreach>
				</if>
				<if test="record.sort != null">
					ORDER BY ${record.sort} ${record.order}
				</if>
				<if test="record.rows != 0">
					LIMIT ${record.startIndex}, ${record.rows}
				</if>
			)AS rb
		LEFT JOIN (SELECT * FROM reimbursementItem ORDER BY `index` ASC) AS rbi ON rb.id = rbi.reimbursementId
		<!-- <if test="record.sort != null">
				ORDER BY ${record.sort} ${record.order}, rbi.index ASC
		</if> -->
		
	</select>
	
	<select id="selectByStatuses" parameterType="java.lang.Object" resultMap="WithReimbursementItem" >
		SELECT 
			rb.*
			FROM reimbursement rb
		WHERE 1 = 1
		<if test="statuses != null" >
			AND status IN
			<foreach collection="statuses" item="status" open="(" separator="," close=")">
				#{status}
			</foreach>
		</if>
		<if test="record != null" >
			<if test="record.createUserId != null and record.createUserId != ''">
				AND rb.createUserId = #{record.createUserId}
			</if>
			<if test="record.no != null and record.no != ''">
				AND rb.no LIKE CONCAT('%', CONCAT(#{record.no}, '%'))
			</if>
			<if test="record.applicantName != null and record.applicantName != ''">
				AND rb.applicantName LIKE CONCAT('%', CONCAT(#{record.applicantName}, '%'))
			</if>
			<if test="record.applicantDivisionId != null and record.applicantDivisionId != ''">
				AND rb.applicantDivisionId = #{record.applicantDivisionId}
			</if>
			<if test="record.isExportFlex != null ">
				AND rb.isExportFlex = #{record.isExportFlex}
			</if>
			<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
				 AND UNIX_TIMESTAMP(rb.applicantDivisionDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
			</if>
			<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
				 AND UNIX_TIMESTAMP(rb.applicantDivisionDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
			</if>
			<if test="record.statusGroup != null and record.statusGroup != ''">
				<choose>
					<when test="record.statusGroup == 1">
						AND rb.status in(0, 1, 2, 3)
					</when>
					<when test="record.statusGroup == 2">
						AND rb.status in(1, 2)
					</when>
					<when test="record.statusGroup == 3">
						AND rb.status = 2
					</when>
					<otherwise> 
						AND 1 = 2
					</otherwise>
				</choose>
			</if>
			<if test="record.statusGroup == null or record.statusGroup == ''">
					AND 1 = 2
			</if>
		</if>
	</select>
	
	<select id="selectForReport" parameterType="java.lang.Object" resultMap="WithReimbursementItem">
		SELECT  sum(r.exchangeRate*r.amount) sum_totalAmount, r.applicantdivisionId, r.applicantdivisionName, 
			r.category1Name AS item_category1Name, r.category2Name AS item_category2Name,
			substring(r.applicantDivisionDate, 1, 7) AS month_applicantDatetime,
			substring(r.applicantDivisionDate, 1, 4) AS year_applicantDatetime,
			CONCAT(substring(r.applicantDivisionDate, 1, 4), '-Q', quarter(r.applicantDivisionDate)) AS quarter_applicantDatetime
		FROM
		(SELECT rbs.id, rbs.exchangeRate,rbs.applicantdivisionId, rbs.applicantDivisionName, rbs.applicantDivisionDate,
				rbi.amount, rbi.category1Name, rbi.category2Name, rbi.category2Id, rbi.reimbursementId
			FROM
			(SELECT rb.id, rb.exchangeRate, rb.applicantDivisionId, rb.applicantDivisionName, rb.applicantDivisionDate
				FROM reimbursement rb
				WHERE 1 = 1
				<if test="applicantDivisionIds != null">
					AND rb.applicantDivisionId IN
					<foreach collection="applicantDivisionIds" item="applicantDivisionId" open="(" separator="," close=")">
						#{applicantDivisionId}
					</foreach>
				</if>
				<if test="record != null" >
					<choose>
						<when test="record.reimbursementStatus == 1">
							AND rb.status = 2
						</when>
						<when test="record.reimbursementStatus == 2">
							AND rb.status = 1
						</when>
					</choose>
					<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
						 AND UNIX_TIMESTAMP(rb.applicantDivisionDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
					</if>
					<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
						 AND UNIX_TIMESTAMP(rb.applicantDivisionDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
					</if>
				</if>
				) rbs 
			INNER JOIN (
			SELECT ri.amount, ri.category1Name, ri.category2Name, ri.category2Id, ri.reimbursementId
				FROM reimbursementItem ri
				WHERE 1 = 1
					<if test="categoryIds != null">
					AND ri.category2Id IN
					<foreach collection="categoryIds" item="categoryId" open="(" separator="," close=")">
						#{categoryId}
					</foreach>
				</if>
				) rbi 
			ON rbs.id = rbi.reimbursementId
		) AS r
		GROUP BY r.applicantdivisionId, r.category2Id
		<!-- 时间可以不参加分类，逗号放前面 -->
		<choose>
			<when test="record.sortTime == 'year'">
				,substring(r.applicantDivisionDate,1,4)
			</when>
			<when test="record.sortTime == 'month'">
				,substring(r.applicantDivisionDate,1,7)
			</when>
			<when test="record.sortTime == 'quarter'">
				,substring(r.applicantDivisionDate,1,4), quarter(r.applicantDivisionDate) 
			</when>
			<otherwise>
			 
			</otherwise>
		</choose>
	</select>
	
	<select id="selectForWeekReportByCustomer" parameterType="java.lang.Object" resultMap="WithReimbursementItem">
		SELECT reim.customerName,
			 sum(case reim.category1Name when '打印费' then sum_totalRmbAmount else 0 end) as dyf,
			 sum(case reim.category1Name when '低值易耗品消耗' then sum_totalRmbAmount else 0 end) as dzyhp,
			 sum(case reim.category1Name when '加班费用' then sum_totalRmbAmount else 0 end) as jbfy,
			 sum(case reim.category1Name when '招待费' then sum_totalRmbAmount else 0 end) as zdf,
			 sum(case reim.category1Name when '车费' then sum_totalRmbAmount else 0 end) as cf,
			 sum(case reim.category1Name when '公寓费用' then sum_totalRmbAmount else 0 end) as gyfy,
			 sum(case reim.category1Name when '涉外费' then sum_totalRmbAmount else 0 end) as swf,
			 sum(case reim.category1Name when '差旅费' then sum_totalRmbAmount else 0 end) as clf,
			 sum(case reim.category1Name when '维修费' then sum_totalRmbAmount else 0 end) as wxf,
			 sum(case reim.category1Name when '办公费' then sum_totalRmbAmount else 0 end) as bgf,
			 sum(case reim.category1Name when '资产' then sum_totalRmbAmount else 0 end) as zc,
			 sum(case reim.category1Name when '培训费用' then sum_totalRmbAmount else 0 end) as pxfy,
			 sum(case reim.category1Name when 'total' then sum_totalRmbAmount else sum_totalRmbAmount end) as customer_total
		FROM(
			SELECT ri.category1Name, 
			(case customerName when '' then 'Other' else customerName end) customerName, 
			SUM(r.exchangeRate*ri.amount) AS sum_totalRmbAmount
			FROM (
				SELECT *
				FROM reimbursement
				WHERE status = 2
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
				) r 
			INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
			GROUP BY  ri.category1Name, ri.customerName
		) reim
		WHERE reim.customerName != 'Other'
		GROUP BY reim.customerName
		UNION ALL
		SELECT reim.customerName,
			 sum(case reim.category1Name when '打印费' then sum_totalRmbAmount else 0 end) as dyf,
			 sum(case reim.category1Name when '低值易耗品消耗' then sum_totalRmbAmount else 0 end) as dzyhp,
			 sum(case reim.category1Name when '加班费用' then sum_totalRmbAmount else 0 end) as jbfy,
			 sum(case reim.category1Name when '招待费' then sum_totalRmbAmount else 0 end) as zdf,
			 sum(case reim.category1Name when '车费' then sum_totalRmbAmount else 0 end) as cf,
			 sum(case reim.category1Name when '公寓费用' then sum_totalRmbAmount else 0 end) as gyfy,
			 sum(case reim.category1Name when '涉外费' then sum_totalRmbAmount else 0 end) as swf,
			 sum(case reim.category1Name when '差旅费' then sum_totalRmbAmount else 0 end) as clf,
			 sum(case reim.category1Name when '维修费' then sum_totalRmbAmount else 0 end) as wxf,
			 sum(case reim.category1Name when '办公费' then sum_totalRmbAmount else 0 end) as bgf,
			 sum(case reim.category1Name when '资产' then sum_totalRmbAmount else 0 end) as zc,
			 sum(case reim.category1Name when '培训费用' then sum_totalRmbAmount else 0 end) as pxfy,
			 sum(case reim.category1Name when 'total' then sum_totalRmbAmount else sum_totalRmbAmount end) as customer_total
		FROM(
			SELECT ri.category1Name, 
			(case customerName when '' then 'Other' else customerName end) customerName, 
			SUM(r.exchangeRate*ri.amount) AS sum_totalRmbAmount
			FROM (
				SELECT *
				FROM reimbursement
				WHERE status = 2
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
				) r 
			INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
			GROUP BY  ri.category1Name, ri.customerName
		) reim
		WHERE reim.customerName = 'Other'
		GROUP BY reim.customerName
		UNION ALL
		SELECT '合计（RMB）：' AS customerName,
			 sum(case reim.category1Name when '打印费' then sum_totalRmbAmount else 0 end) as dyf,
			 sum(case reim.category1Name when '低值易耗品消耗' then sum_totalRmbAmount else 0 end) as dzyhp,
			 sum(case reim.category1Name when '加班费用' then sum_totalRmbAmount else 0 end) as jbfy,
			 sum(case reim.category1Name when '招待费' then sum_totalRmbAmount else 0 end) as zdf,
			 sum(case reim.category1Name when '车费' then sum_totalRmbAmount else 0 end) as cf,
			 sum(case reim.category1Name when '公寓费用' then sum_totalRmbAmount else 0 end) as gyfy,
			 sum(case reim.category1Name when '涉外费' then sum_totalRmbAmount else 0 end) as swf,
			 sum(case reim.category1Name when '差旅费' then sum_totalRmbAmount else 0 end) as clf,
			 sum(case reim.category1Name when '维修费' then sum_totalRmbAmount else 0 end) as wxf,
			 sum(case reim.category1Name when '办公费' then sum_totalRmbAmount else 0 end) as bgf,
			 sum(case reim.category1Name when '资产' then sum_totalRmbAmount else 0 end) as zc,
			 sum(case reim.category1Name when '培训费用' then sum_totalRmbAmount else 0 end) as pxfy,
			 sum(case reim.category1Name when 'total' then sum_totalRmbAmount else sum_totalRmbAmount end) as customer_total	
		FROM(
			SELECT ri.category1Name, 
			ri.customerName, 
			SUM(r.exchangeRate*ri.amount) AS sum_totalRmbAmount
			FROM (
				SELECT *
				FROM reimbursement
				WHERE status = 2
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
				) r 
			INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
			GROUP BY ri.category1Name, ri.customerName
		) reim
	</select>
	
	<select id="selectForWeekReportByDivision" parameterType="java.lang.Object" resultMap="WithReimbursementItem">
	SELECT reim.divisionName,
			 sum(case reim.category1Name when '打印费' then sum_totalRmbAmount else 0 end) as dyf,
			 sum(case reim.category1Name when '低值易耗品消耗' then sum_totalRmbAmount else 0 end) as dzyhp,
			 sum(case reim.category1Name when '加班费用' then sum_totalRmbAmount else 0 end) as jbfy,
			 sum(case reim.category1Name when '招待费' then sum_totalRmbAmount else 0 end) as zdf,
			 sum(case reim.category1Name when '车费' then sum_totalRmbAmount else 0 end) as cf,
			 sum(case reim.category1Name when '公寓费用' then sum_totalRmbAmount else 0 end) as gyfy,
			 sum(case reim.category1Name when '涉外费' then sum_totalRmbAmount else 0 end) as swf,
			 sum(case reim.category1Name when '差旅费' then sum_totalRmbAmount else 0 end) as clf,
			 sum(case reim.category1Name when '维修费' then sum_totalRmbAmount else 0 end) as wxf,
			 sum(case reim.category1Name when '办公费' then sum_totalRmbAmount else 0 end) as bgf,
			 sum(case reim.category1Name when '资产' then sum_totalRmbAmount else 0 end) as zc,
			 sum(case reim.category1Name when '培训费用' then sum_totalRmbAmount else 0 end) as pxfy,
			 sum(case reim.category1Name when 'total' then sum_totalRmbAmount else sum_totalRmbAmount end) as division_total
		FROM(
			SELECT ri.category1Name, 
			(case divisionName when '' then 'Other' else divisionName end) divisionName, 
			SUM(r.exchangeRate*ri.amount) AS sum_totalRmbAmount
			FROM (
				SELECT *
				FROM reimbursement
				WHERE status = 2
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
				) r 
			INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
			GROUP BY  ri.category1Name, ri.divisionName
		) reim
		group by reim.divisionName
		UNION ALL
		SELECT '合计（RMB）：' AS divisionName,
			 sum(case reim.category1Name when '打印费' then sum_totalRmbAmount else 0 end) as dyf,
			 sum(case reim.category1Name when '低值易耗品消耗' then sum_totalRmbAmount else 0 end) as dzyhp,
			 sum(case reim.category1Name when '加班费用' then sum_totalRmbAmount else 0 end) as jbfy,
			 sum(case reim.category1Name when '招待费' then sum_totalRmbAmount else 0 end) as zdf,
			 sum(case reim.category1Name when '车费' then sum_totalRmbAmount else 0 end) as cf,
			 sum(case reim.category1Name when '公寓费用' then sum_totalRmbAmount else 0 end) as gyfy,
			 sum(case reim.category1Name when '涉外费' then sum_totalRmbAmount else 0 end) as swf,
			 sum(case reim.category1Name when '差旅费' then sum_totalRmbAmount else 0 end) as clf,
			 sum(case reim.category1Name when '维修费' then sum_totalRmbAmount else 0 end) as wxf,
			 sum(case reim.category1Name when '办公费' then sum_totalRmbAmount else 0 end) as bgf,
			 sum(case reim.category1Name when '资产' then sum_totalRmbAmount else 0 end) as zc,
			 sum(case reim.category1Name when '培训费用' then sum_totalRmbAmount else 0 end) as pxfy,
			 sum(case reim.category1Name when 'total' then sum_totalRmbAmount else sum_totalRmbAmount end) as division_total	
		FROM(
			SELECT ri.category1Name, 
			(case divisionName when '' then 'Other' else divisionName end) divisionName, 
			SUM(r.exchangeRate*ri.amount) AS sum_totalRmbAmount
			FROM (
				SELECT *
				FROM reimbursement
				WHERE status = 2
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
				) r 
			INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
			GROUP BY ri.category1Name, ri.divisionName
		) reim
	</select>
	
	<select id="selectForDetail" parameterType="java.lang.Object" resultMap="WithReimbursementItem">
		SELECT r.applicantName, 
			r.applicantDivisionName, 
			r.applicantDivisionDate, 
			r.auditDate,
			r.payeeName,
			r.exchangeRate*ri.amount AS amount, 
			ri.category1Name, 
			ri.category2Name,  
			ri.customerName,
			ri.divisionName,
			ri.description
		FROM reimbursement r
		INNER JOIN reimbursementItem ri ON r.id = ri.reimbursementId
		WHERE r.status = 2
		<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
		 	AND UNIX_TIMESTAMP(auditDate) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
		</if>
		<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
			 AND UNIX_TIMESTAMP(auditDate) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
		</if>
		ORDER BY r.applicantDivisionName, r.applicantName, r.payeeName, r.applicantDivisionDate, ri.category1Name, ri.category2Name
	</select>
</mapper>
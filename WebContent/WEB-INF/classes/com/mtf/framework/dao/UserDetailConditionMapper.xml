<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.framework.dao.UserDetailConditionMapper" > 
	<resultMap type="com.mtf.framework.model.impl.UserDetailImpl" id="userDetail"/> 
	<resultMap id="listRole" type="com.mtf.framework.model.impl.RoleImpl">
		<result column="roleId" property="id" jdbcType="CHAR" />
		<result column="roleName" property="name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="listDivision" type="com.mtf.framework.model.impl.DivisionImpl">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="divisionName" property="name" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="searchResultMap" type="com.mtf.framework.model.impl.UserDetailImpl">
		<result column="id" property="id" jdbcType="CHAR" />
		<result column="loginName" property="loginName" jdbcType="VARCHAR" />
		<result column="displayName" property="displayName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="userId" property="userId" jdbcType="CHAR" />
		<result column="language" property="language" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="CHAR" />
		<result column="divisionId" property="divisionId" jdbcType="CHAR" />
		<result column="divisionName" property="divisionName" jdbcType="CHAR"/>
		<result column="roleId" property="roleId" jdbcType="VARCHAR" />
		<result column="roleName" property="roleName" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="dateTime" property="dateTime" jdbcType="TIMESTAMP" />
		<result column="gender" property="gender" jdbcType="VARCHAR" /> 
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="schoolName1" property="schoolName1" jdbcType="VARCHAR" />
		<result column="educationalDegree1Name" property="educationalDegree1Name" jdbcType="VARCHAR" />
		<result column="ethnicGroupName" property="ethnicGroupName" jdbcType="VARCHAR" />
		<result column="phoneNo" property="phoneNo" jdbcType="VARCHAR" />
		<result column="birthDate" property="birthDate" jdbcType="TIMESTAMP" />
		<result column="entryDate" property="entryDate" jdbcType="VARCHAR" />
		<result column="cardNo" property="cardNo" jdbcType="VARCHAR" />
		<result column="staffCode" property="staffCode" jdbcType="VARCHAR" />
		<result column="badgenumber" property="badgenumber" jdbcType="VARCHAR" />
		<result column="rank" property="rank" jdbcType="VARCHAR" />
		<result column="positionId" property="positionId" jdbcType="VARCHAR" />
		<result column="seniorityShow" property="seniorityShow" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="VARCHAR" />
		<result column="immediateSuperior" property="immediateSuperior" jdbcType="VARCHAR" />
		<result column="primaryDepartment" property="primaryDepartment" jdbcType="VARCHAR" />
		<result column="secondaryDepartment" property="secondaryDepartment" jdbcType="VARCHAR" />
		<result column="employer" property="employer" jdbcType="VARCHAR" />
		<result column="workGroupDetail" property="workGroupDetail" jdbcType="VARCHAR" />
		<result column="ethnicGroup" property="ethnicGroup" jdbcType="VARCHAR" />
		<result column="educationalDegree1" property="educationalDegree1" jdbcType="VARCHAR" />
		<result column="major1" property="major1" jdbcType="VARCHAR" />
		<result column="englishProficiency" property="englishProficiency" jdbcType="VARCHAR" />
		<result column="resgisteredResidence" property="resgisteredResidence" jdbcType="VARCHAR" />
		<result column="officialTelNo" property="officialTelNo" jdbcType="VARCHAR" />
		<result column="phoneNo" property="phoneNo" jdbcType="VARCHAR" />
		<result column="VNetNo" property="VNetNo" />
		<result column="contractNo" property="contractNo" />
		<result column="contractCommenceDate" property="contractCommenceDate" />
		<result column="turns" property="turns" />
		<result column="roleId" property="roleId" />
		<result column="roleName" property="roleName" />
		<collection property="listRole" resultMap="listRole"></collection>
		<collection property="listDivision" resultMap="listDivision"></collection>
	</resultMap>

	<sql id="getColumn">
		CASE WHEN a.attachPersonalPhoto IS NOT NULL THEN 
			(SELECT b.savePathFile FROM attachment AS b WHERE b.id = a.attachPersonalPhoto) END attachPersonalPhotoPath,
		CASE WHEN a.attachIdNo IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachIdNo) END attachIdNoFileName,
			
		CASE WHEN a.attachEducationalDegree1 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachEducationalDegree1) END attachEducationalDegreeFileName1,
		CASE WHEN a.attachDegree1 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachDegree1) END attachDegreeFileName1,
		CASE WHEN a.attachEducationalDegree2 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachEducationalDegree2) END attachEducationalDegreeFileName2,
		CASE WHEN a.attachDegree2 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachDegree2) END attachDegreeFileName2,
		CASE WHEN a.attachEducationalDegree3 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachEducationalDegree3) END attachEducationalDegreeFileName3,
		CASE WHEN a.attachDegree3 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.attachDegree3) END attachDegreeFileName3,
		<!-- 技能证书文件名 -->
		CASE WHEN a.certificatesOrLicenses1 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.certificatesOrLicenses1) END certificatesOrLicensesFileName1,
		CASE WHEN a.certificatesOrLicenses2 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.certificatesOrLicenses2) END certificatesOrLicensesFileName2,
		CASE WHEN a.certificatesOrLicenses3 IS NOT NULL THEN 
			(SELECT b.fileName FROM attachment AS b WHERE b.id = a.certificatesOrLicenses3) END certificatesOrLicensesFileName3,
		CASE WHEN
			month(now())-month(a.entryDate)+12 >= 12
		THEN
			concat(year(now())-year(a.entryDate),'Y', month(now())-month(a.entryDate), 'M')
		ELSE
			concat(year(now())-year(a.entryDate)-1,'Y', month(now())-month(a.entryDate)+12, 'M')
		END AS seniorityShow,
	</sql>

	<sql id="getFrom">
		
	</sql>
	
	<sql id="selectColumn">
	<if test="tagMapper == 'doListUserByDivision'">
		CASE WHEN
			a.userId = b.userId
		THEN
			1
		ELSE 
			0
		END checked,
	</if>
		<!-- a.id,
		a.loginName AS loginNameMain,
		a.`status` AS statusMain,
		a.language AS languageMain,
		c.id AS roleId,
		d.`name` AS roleName,
		e.id AS divisionId,		
		f.`name` AS divisionName,
		f.nameEng AS divisionNameEng,
		(SELECT user.displayName FROM user WHERE user.id = a.immediateSuperior) AS nameImmediateSuperior,
		f.depTitle,
		(
			SELECT 
				`name`
			FROM 
				userInfor 
			WHERE 
				`code` = a.ethnicGroup
			LIMIT 1
		) AS ethnicGroupName,
		(
			SELECT `name`
			FROM userInfor 
			WHERE 
				`code` = a.educationalDegree1
			LIMIT 1
		) AS educationalDegree1Name, -->
		<!-- CASE WHEN
			month(now())-month(a.entryDate)+12 >= 12
		THEN
			concat(year(now())-year(a.entryDate),'Y', month(now())-month(a.entryDate), 'M')
		ELSE
			concat(year(now())-year(a.entryDate)-1,'Y', month(now())-month(a.entryDate)+12, 'M')
		END AS seniorityShow,
		CASE WHEN
			month(now())-month(a.entryDate)+12 >= 12
		THEN
			concat(year(now())-year(a.entryDate),'Y', month(now())-month(a.entryDate), 'M') 
		ELSE
		concat(year(now())-year(a.entryDate)-1,'Y', month(now())-month(a.entryDate)+12, 'M') 
		END AS seniority,
		year(now())-year(a.birthDate) AS age,
		(SELECT userinfor.`name` FROM userinfor WHERE a.positionId = userinfor.`code`) AS namePosition,
		(SELECT userinfor.`name` FROM userinfor WHERE a.rank = userinfor.`code`) AS namerank,
		 -->
		 <!-- 
		(SELECT userinfor.`name` FROM userinfor WHERE a.employer = userinfor.`code`) AS nameEmployer,
		
		CASE WHEN 
			a.socialSecurityPermission = 'y'
		THEN 
			'*'
		ELSE
			''
		END AS nameSocialSecurityPermission,

		CASE WHEN 
			a.houseFundingPermission = 'y'
		THEN 
			'*'
		ELSE
			''
		END AS nameHouseFundingPermission,
		-->
	</sql>
	
	<sql id="selectFrom">
	</sql>
	
	<sql id="countFrom">
	</sql>

	<sql id="searchFrom">
		<if test="tagMapper == 'join'">
			INNER JOIN user AS b ON b.id = a.userId
			LEFT JOIN userRole AS c ON (c.userId = a.userId)
			LEFT JOIN role AS d ON d.id = c.roleId
			LEFT JOIN userDivision AS e ON (e.userId = a.userId AND e.mainIndex = 1)
			LEFT JOIN division AS f ON f.id = e.divisionId
		</if>
		<if test="tagMapper == 'doListUserByDivision'">
			LEFT JOIN 
			(SELECT u.userId FROM userdetail u WHERE  
				FIND_IN_SET(userId,(SELECT av.userIdList 
					FROM attenvacatemanage av WHERE av.id = #{idAttenVacateManage}))) b ON b.userId = a.userId
		</if>		
	</sql>
	
	<select id="select" parameterType="java.lang.Object" resultMap="userDetail">
		SELECT
			a.id,
			a.userId,
			a.staffCode,
			a.loginName,
			a.displayName,
			a.email,
			a.cardNo,
			a.language,
			a.gender,
			a.status,
			a.roleName,
			a.primaryDepartment,
			a.divisionName,
			a.workGroupDetailName,
			a.positionId,
			a.immediateSuperiorName,
			a.rank,
			a.entryDate,
			a.seniority,
			a.birthDate,
			a.age,
			a.ethnicGroup,
			a.educationalDegree1,
			a.schoolName1,
			a.major1,
			a.englishProficiency,
			a.resgisteredResidence,
			a.officialTelNo,
			a.phoneNo,
			a.employer,
			a.contractNo,
			a.contractCommenceDate,
			a.contracTerminationDate,
			a.turns,
			a.socialSecurityPermission,
			a.houseFundingPermission,
			a.departedDate,
			a.positiveDate
		FROM userdetail a
		<include refid="searchFrom"/> 
		<where>
			<include refid="searchWhere"/> 
		</where>
		<if test="group != null">
			GROUP BY ${group}
		</if>
		<if test="sort != null">
			ORDER BY ${sort} ${order}
		</if>
		<if test="rows != 0">
			LIMIT ${startIndex}, ${rows}
		</if>		
	</select>
	
	<select id="count" parameterType="java.lang.Object" resultType="int">
		SELECT COUNT(1) FROM userDetail AS a
		<include refid="searchFrom"/> 
		<where>
			<include refid="searchWhere"/> 
		</where>
	</select>
	
	<select id="selectUserByPermission" parameterType="java.lang.Object" resultMap="userDetail">
		SELECT
			userDetail.*
		FROM
			rolePermission
		LEFT JOIN userRole ON userRole.roleId = rolePermission.roleId
		LEFT JOIN userDetail ON userDetail.userId = userRole.userId
		LEFT JOIN user ON user.id = userDetail.userId
		WHERE
			rolePermission.`code` = ${code}
		AND
			user.status = '0'
		LIMIT 1
	</select>	
	<select id="selectUserByPermissionCode" parameterType="java.lang.Object" resultMap="userDetail">
		SELECT
			userDetail.*
		FROM
			rolePermission
		LEFT JOIN userRole ON userRole.roleId = rolePermission.roleId
		LEFT JOIN userDetail ON userDetail.userId = userRole.userId
		LEFT JOIN user ON user.id = userDetail.userId
		WHERE
			rolePermission.`code` = ${code}
		AND
			user.status = '0'
	</select>	
	
	<sql id="updateColumn">
<!-- 		<if test="immediateSuperior == null or immediateSuperior == ''">
				immediateSuperior = #{immediateSuperior},
		</if> -->
		<if test="tagMapper == 'taskUpdateUserSeniority'">
			seniority = ( CASE WHEN
				month(now())-month(entryDate)+12 >= 12
			THEN
				concat(year(now())-year(entryDate),'Y', month(now())-month(entryDate), 'M')
			ELSE
				concat(year(now())-year(entryDate)-1,'Y', month(now())-month(entryDate)+12, 'M')
			END ),
		</if>
		<if test="tagMapper == 'taskUpdateUserAge'">
			age = (year(now())-year(birthDate)),
		</if>
		<if test="tagMapper == 'taskUpdateUserUniqueName'">
			uniqueName = CONCAT(displayName ,'(', firstNameEn,')'),
		</if>
	</sql>
	<sql id="updateWhere">
		<if test="id != null">
			id = #{id}
		</if>	
		<if test="userId != null">
			userId = #{userId}
		</if>
		<if test="judgeUpdate == 'ap'">
			loginName = #{loginName}
		</if>		
		<if test="tagUpdate == 'immediateSuperior'">
			divisionId = #{divisionId}
		</if>	
		<if test="tagMapper == 'taskUpdateUserSeniority'">
			entryDate IS NOT NULL 
			AND
			(status = '0' OR status = '4')
		</if>
		<if test="tagMapper == 'taskUpdateUserAge'">
			birthDate IS NOT NULL 
			AND
			(status = '0' OR status = '4')
		</if>
		<if test="tagMapper == 'taskUpdateUserUniqueName'">
			uniqueName IS NULL 
			AND
			(status = '0' OR status = '4')
		</if>
	</sql>
	
	<sql id="getWhere">
		
	</sql>

	<sql id="searchWhere">
		<if test="searchLoginName != null and searchLoginName != ''">
			AND a.loginName LIKE CONCAT('%', #{searchLoginName}, '%') 
		</if>
		<if test="searchDisplayName != null and searchDisplayName != ''">
			AND a.displayName LIKE CONCAT('%', #{searchDisplayName},'%')
		</if>
		<if test="staffCode != null and staffCode != ''">
			AND a.staffCode = LIKE CONCAT('%', #{staffCode},'%')
		</if>		
		<if test="searchImmediateSuperior != null and searchImmediateSuperior != ''">
			AND a.immediateSuperiorName LIKE CONCAT('%', #{searchImmediateSuperior},'%')
		</if>
		<if test="arraySearchStatus != null and arraySearchStatus != ''">
			AND a.status IN
			<foreach collection="arraySearchStatus" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>	
		<if test="searchDivisionId == 'NULL'">
			AND a.divisionId IS NULL
		</if>
		<if test="searchDivisionId != null and searchDivisionId != 'NULL'">
			AND (a.divisionId = #{searchDivisionId}
			<if test="divisionLevel == 1">
				OR a.divisionId1 = #{searchDivisionId}
			</if>
			<if test="divisionLevel == 2">
				OR a.divisionId2 = #{searchDivisionId}
			</if>
			<if test="divisionLevel == 3">
				OR a.divisionId3 = #{searchDivisionId}
			</if>
			<if test="divisionLevel == 4">
				OR a.divisionId4 = #{searchDivisionId}
			</if>
			<if test="divisionLevel == 5">
				OR a.divisionId5 = #{searchDivisionId}
			</if>)
		</if>
		<if test="arraySearchDivision != null and arraySearchDivision != ''">
			AND e.divisionId IN
			<foreach collection="arraySearchDivision" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="arraySearchRole != null and arraySearchRole != ''">
			AND d.id IN
			<foreach collection="arraySearchRole" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="roleId != null and roleId != ''">
			AND a.roleId = #{roleId}
		</if>
		<if test="arraySearchEnglishEfficien != null and arraySearchEnglishEfficien != ''">
			AND a.englishProficiency IN
			<foreach collection="arraySearchEnglishEfficien" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="arraySearchMajor != null and arraySearchMajor != ''">
			AND a.major1 IN
			<foreach collection="arraySearchMajor" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="arraySearchEducation != null and arraySearchEducation != ''">
			AND a.educationalDegree1 IN
			<foreach collection="arraySearchEducation" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="listSearchRank != null and listSearchRank != ''">
			AND a.rank IN
			<foreach collection="listSearchRank" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>		
		<if test="arraySearchPosition != null and arraySearchPosition != ''">
			AND a.positionId IN
			<foreach collection="arraySearchPosition" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="terminationDateEnd != null and terminationDateEnd != ''">
			AND  DATE(#{terminationDateEnd}) >= DATE(a.contracTerminationDate)
		</if>				
		<if test="statusMain != null and statusMain != ''">
			AND a.status = #{statusMain}
		</if>			
		<if test="divisionIdMain != null and divisionIdMain != ''">
			AND (e.divisionId = #{divisionIdMain})
			AND a.positionId IS NOT NULL
		</if>			
		<if test="tagMapper == 'bank' ">
			AND (a.status = 0 OR a.status = 4)
			AND a.bankCard IS NOT NULL
			AND a.uniqueName IS NOT NULL
		</if>	
		<if test="tagMapper == 'doListUserByDivision'">
			AND (a.`status` = 0 OR a.`status` = 4)
			AND a.displayName IS NOT NULL
		</if>
	</sql>
	
	<!-- 根据主部分取得上级领导 -->
	<select id="getSuperior" parameterType="java.lang.Object" resultMap="userDetail">
		SELECT 
			a.id, 
			a.userId,
			a.displayName, 
			a.divisionId, 
			a.departmentId
		FROM userDetail AS a
		INNER JOIN userDivision AS b ON b.userId = a.userId
		<where>
			<if test="departmentId != null">
				AND b.divisionId = #{departmentId}
			</if>
			<if test="mainIndex != null">
				AND b.mainIndex = #{mainIndex}
			</if>
			<if test="positionId != null">
				AND b.positionId = #{positionId}
			</if>
			<if test="status != null">
				AND a.status = #{status}
			</if>
		</where>
		LIMIT 1
	</select>	
</mapper>
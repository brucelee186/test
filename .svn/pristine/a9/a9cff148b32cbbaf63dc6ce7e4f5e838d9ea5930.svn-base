<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.framework.dao.AttendanceConditionMapper" > 
	<resultMap type="com.mtf.framework.model.impl.AttendanceImpl" id="attendance"/> 

	<sql id="getColumn">
		
	</sql>

	<sql id="getFrom">
		
	</sql>

	<sql id="getWhere">
		<if test="dateForCalendar != null and dateForCalendar != ''">
			AND DATE(a.date) = DATE(#{dateForCalendar})
		</if>
	</sql>
	
	<sql id="updateWhere">
		<if test="id != null">
				id = #{id}
		</if>
		<if test="idVacateManage != null and typeDate == null and upIgnoreIdVacate == null">
				idVacateManage = #{idVacateManage}
		</if>
		<if test="judApprove == 'ap2'">
				dateMonth = #{dateMonth}
		</if>
		<if test="tagUpdate == 'updateVacateAll'">
			OR
			(
					userId = #{userId}
				AND 
					date = #{date}			
			)
		</if>
		<if test="tagMapper == 'updateCreateOverwork'">
			idVacateManageOvertime = #{idVacateManageOvertime}
		</if>
	</sql>
	
	<sql id="updateColumn">
		<if test="remark == '' ">
			remark = #{remark},
		</if>
	</sql>
	
	<sql id="selectColumn">
		<!-- 提升查询效率，去掉关联查询 -->
		<!-- b.id AS userId,
		d.name AS divisionName, -->
		CASE WHEN 
				DATE(a.daySignIn) >= DATE(NOW())
		THEN 
			'en'
		ELSE 
			'di'
		END
		AS tagRecheck,
	</sql>

	<sql id="selectFrom">
		<!-- 提升查询效率，去掉关联查询 -->
		<!-- LEFT JOIN user AS b ON b.id = a.userId
		LEFT JOIN division AS d ON d.id = b.departmentId -->
	</sql>
	
	<sql id="selectWhere">
		<!-- <if test="userId != null and userId != ''">
			AND b.id = #{userId}
		</if>
		<if test="divisionId != null and divisionId != ''">
			AND d.id = #{divisionId}
		</if> -->
		<if test="listDivision != null and listDivision.size > 0">
			AND a.divisionId IN
			 <foreach item="division" index="index" collection="listDivision" open="(" separator="," close=")">  
			 	 #{division.divisionId}  
			 </foreach> 
		</if>
		<if test="dateStart != null and dateStart != ''">
			AND DATE(a.date) >= #{dateStart}
		</if>
		<if test="dateEnd != null and dateEnd != ''">
			<![CDATA[ 
				AND DATE(a.date) <= #{dateEnd}
			]]>  
		</if>
		<if test="searchUserName != null and searchUserName != ''">
			AND a.userName LIKE CONCAT('%', #{searchUserName},'%')
		</if>			
	</sql>
	
	<sql id="countFrom">
		<!-- LEFT JOIN user AS b ON b.id = a.userId
		LEFT JOIN division AS d ON d.id = b.departmentId -->
	</sql>
	
	<sql id="countWhere">
		<!-- <if test="userId != null and userId != ''">
			AND b.id = #{userId}
		</if>
		<if test="divisionId != null and divisionId != ''">
			AND d.id = #{divisionId}
		</if> -->
		<if test="listDivision != null and listDivision.size > 0">
			AND a.divisionId IN
			 <foreach item="division" index="index" collection="listDivision" open="(" separator="," close=")">  
			 	 #{division.divisionId}  
			 </foreach> 
		</if>
		<if test="dateStart != null and dateStart != ''">
			AND DATE(a.date) >= #{dateStart}
		</if>
		<if test="dateEnd != null and dateEnd != ''">
			<![CDATA[ 
				AND DATE(a.date) <= #{dateEnd}
			]]>  
		</if>		
	</sql>

	<!-- 查询实体对象集合 -->
	<select id="searchMonitorCollection" parameterType="java.lang.Object" resultMap="attendance">
		<![CDATA[
		SELECT 
			a.displayName AS userName, 
			a.cardNo,
			a.displayName,
			a.badgenumber,
			a.badgenumber AS pin,
			a.id AS userId,
			a.departmentId AS divisionId,
			(SELECT division.`name` FROM division WHERE division.id = a.departmentId) AS divisionName,
			a.email,
			b.time,
			COUNT(b.time) AS ticks,
			DAY(b.time) AS day,
			MIN(b.time) AS timeStart, 
			MAX(b.time) AS timeEnd, 
			DATE_FORMAT(IFNULL(b.time, #{collectDate}), '%Y-%m') AS dateMonth, 
			DATE_FORMAT(DATE(IFNULL(b.time,DATE(#{collectDate}))) , '%Y-%m-%d') AS date,
			DATE(NOW()) AS addDate, 
			dayofweek(b.time) AS dateWeek, 
			time(MIN(b.time)) AS dayStart,
			time(MAX(b.time)) AS dayEnd, 
			TIMEDIFF(MAX(b.time), MIN(b.time)) AS timeWork
		FROM `user` AS a
		LEFT JOIN zkeco_db.acc_monitor_log AS b ON (DATE(b.time) = DATE(#{collectDate}) AND b.card_no = a.cardNo)
		WHERE 
			(
				a.`status` = '0'
			 	OR
			 	a.`status` = '4'
			 )
		AND
			a.cardNo IS NOT NULL
		GROUP BY a.cardNo
		]]>
	</select>
	
	<!-- 查询实体对象集合 -->
	<select id="countAttenAbsenteeism" parameterType="java.lang.Object" resultType="int">
		SELECT COUNT(MA.userId) FROM(
			SELECT
				a.userId
			FROM
			attendance AS a, attendance AS b, attendance AS c
			WHERE
				a.absenteeism = '1'
			AND
				(a.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.userId = a.userId AND b.absenteeism = '1' AND DATEDIFF(b.date,a.date) = 1)
			AND
				(c.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND c.userId = b.userId AND c.absenteeism = '1' AND DATEDIFF(c.date,b.date) = 1)
			GROUP BY a.userId
			LIMIT 10000) AS MA
	</select>
	
	<!-- 查询实体对象集合 -->
	<select id="selectAttenAbsence" parameterType="java.lang.Object" resultMap="attendance">
		<![CDATA[
			SELECT
				a.*,
				b.id AS b_id,
				b.date AS b_date,
				b.absenteeism AS b_absenteeism,
				c.id AS c_id,
				c.date AS c_date,
				c.absenteeism AS c_absenteeism
			FROM
				attendance AS a, attendance AS b, attendance AS c
			WHERE
				a.absenteeism = '1'
			AND
				(a.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.userId = a.userId AND b.absenteeism = '1' AND DATEDIFF(b.date,a.date) = 1)
			AND
				(c.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND c.userId = b.userId AND c.absenteeism = '1' AND DATEDIFF(c.date,b.date) = 1)
			GROUP BY a.userId
		]]>
		<if test="sort != null">
			ORDER BY a.${sort} ${order}
		</if>
		<if test="rows != 0">
			LIMIT ${startIndex}, ${rows}
		</if>
	</select>
	
	<select id="countAttenAbsence" parameterType="java.lang.Object" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM (
				SELECT
					a.*
				FROM
					attendance AS a, attendance AS b, attendance AS c
				WHERE
					a.absenteeism = '1'
				AND
					(a.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND b.userId = a.userId AND b.absenteeism = '1' AND DATEDIFF(b.date,a.date) = 1)
				AND
					(c.date >= DATE_SUB(NOW(),INTERVAL 2 MONTH) AND c.userId = b.userId AND c.absenteeism = '1' AND DATEDIFF(c.date,b.date) = 1)
				GROUP BY a.userId
				LIMIT 10000
			) AS MA
		]]>
	</select>
</mapper>
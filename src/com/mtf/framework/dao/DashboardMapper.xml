<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtf.framework.dao.DashboardMapper">
	<resultMap type="com.mtf.framework.model.impl.ContractImpl" id="contract" />
	<resultMap type="com.mtf.framework.model.impl.ApplicationImpl" id="application" />
	<resultMap type="com.mtf.framework.model.impl.PaymentImpl" id="payment" />
	<select id="selectAll" resultMap="contract" parameterType="contract">
		SELECT count(*) as count
		<if test="userLevel == 1 or userLevel == 2 or userLevel == 3 ">
		,approveState
		</if>
		,flag
		,(CASE WHEN  flag = 's' THEN  1 
		WHEN flag = 'o' THEN  2 
		WHEN flag = 'mp' THEN  3
		WHEN  flag = 'ms' THEN  4
		WHEN  flag = 'm' THEN  5
		WHEN  flag = 'c' THEN  6
		WHEN  flag = 'a' THEN  7
		END) AS flagTest
		FROM contract AS a
		WHERE 1 = 1
		<if test="flgHistory == null">
			AND a.flgHistory != 'y'
		</if>
		<if test="addUser != null and addUser != ''">
			AND a.addUser = #{addUser}
		</if>
		<if test="flag != null">
			AND a.flag = #{flag}
		</if>
		<if test="approveState != null and approveState != ''">
			AND a.approveState LIKE CONCAT('%', #{approveState},'%')
		</if>
		<if test="userLevel == 0">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 1">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 2">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 3">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 1 or userLevel == 2 or userLevel == 3 or userLevel == 0">
			<if test="listApproveState != null">
				AND a.approveState IN
				<foreach collection="listApproveState" item="item" index="index" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</if>
		group by
		<if test="userLevel == 1 or userLevel == 2 or userLevel == 3 ">
		 approveState,
		</if>
		flag
		order by flagTest
	</select>
	<!-- cwb任务数 -->
	<select id="selectAllForApplication" resultMap="application" parameterType="application">
		SELECT count(*) as count		
		,approveState		
		,flag		
		FROM application AS a
		WHERE 1 = 1
		<if test="addUser != null and addUser != ''">
			AND a.addUser = #{addUser}
		</if>
		<if test="flag != null">
			AND a.flag = #{flag}
		</if>
		
		<if test="approveState != null and approveState != ''">
			AND a.approveState LIKE CONCAT('%', #{approveState},'%')
		</if>
		
		<if test="userLevel == 0">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 1">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 2">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userLevel == 3">
			AND a.approverId0 IN
			<foreach collection="listEmployee" item="item" index="index" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
		<if test="userLevel == 1 or userLevel == 2 or userLevel == 3  or  userLevel == 0 or  userLevel == 4">
			<if test="listApproveState != null">
				AND a.approveState IN
				<foreach collection="listApproveState" item="item" index="index" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</if>
		group by		
		approveState,		
		flag
		order by
		approveState desc	
	</select>
	
	
	
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.framework.dao.PurchaseMapper" > 
	<resultMap type="com.mtf.framework.model.impl.PurchaseImpl" id="purchase"/> 
	<resultMap id="PurchaseMapper" type="PurchaseImpl">
		<id property="id" column="id" jdbcType="VARCHAR"/>
		<id property="no" column="no"  jdbcType="INTEGER"/>
		<id property="applicantId" column="applicantId" jdbcType="VARCHAR" />
		<id property="applicantName" column="applicantName" jdbcType="VARCHAR"/>
		<id property="applicantdivisionId" column="applicantdivisionId" jdbcType="VARCHAR"/>		
		<id property="applicantdivisionName" column="applicantdivisionName" jdbcType="VARCHAR"/>
		<id property="applicantDatetime" column="applicantDatetime" jdbcType="TIMESTAMP"/>
		<id property="approvelV1UserId" column="approvelV1UserId" jdbcType="VARCHAR"/>
		<id property="approvelv1UserName" column="approvelv1UserName" jdbcType="VARCHAR"/>
		<id property="approveLv1UserDatetime" column="approveLv1UserDatetime" jdbcType="TIMESTAMP"/>
		<id property="specifiedlv1ApproveUserIds" column="specifiedlv1ApproveUserIds" jdbcType="VARCHAR"/>
		<id property="specifiedlv1ApproveUserNames" column="specifiedlv1ApproveUserNames" jdbcType="VARCHAR"/>		
		<id property="quoteUserId" column="quoteUserId" jdbcType="VARCHAR"/>
		<id property="quoteUserName" column="quoteUserName" jdbcType="VARCHAR"/>
		<id property="quoteDatetime" column="quoteDatetime" jdbcType="TIMESTAMP"/>
		<id property="quoteComment" column="quoteComment" jdbcType="VARCHAR"/>		
		<id property="quoteTotalAmount" column="quoteTotalAmount" jdbcType="DOUBLE"/>
		<id property="quoteCurrencyId" column="quoteCurrencyId" jdbcType="VARCHAR"/>
		<id property="exchangeRate" column="exchangeRate" jdbcType="DOUBLE"/>
		<id property="totalRmbAmount" column="totalRmbAmount" jdbcType="DOUBLE"/>
		<id property="isQuoted" column="isQuoted" jdbcType="INTEGER"/>
		<id property="specifiedlv2ApproveUserIds" column="specifiedlv2ApproveUserIds" jdbcType="VARCHAR"/>
		<id property="specifiedlv2ApproveUserNames" column="specifiedlv2ApproveUserNames" jdbcType="VARCHAR"/>
		<id property="approvelV2UserId" column="approvelV2UserId" jdbcType="VARCHAR"/>
		<id property="approvelv2UserName" column="quoteTotalAmount" jdbcType="VARCHAR"/>
		<id property="approveLv2UserDatetime" column="approveLv2UserDatetime" jdbcType="TIMESTAMP"/>
		<id property="reqLevel" column="reqLevel" jdbcType="INTEGER"/>
		<id property="appLevel" column="appLevel" jdbcType="INTEGER"/>
		<id property="status" column="status" jdbcType="INTEGER"/>
		<id property="createUserId" column="createUserId" jdbcType="VARCHAR"/>
		<id property="createUserName" column="createUserName" jdbcType="VARCHAR"/>
		<id property="createDatetime" column="createDatetime" jdbcType="TIMESTAMP"/>
		<id property="updateUserId" column="updateUserId" jdbcType="VARCHAR"/>
		<id property="updateUserName" column="updateUserName" jdbcType="VARCHAR"/>
		<id property="updateDatetime" column="updateDatetime" jdbcType="TIMESTAMP"/>
		
		<id property="totalAmount" column="sum_totalAmount" jdbcType="DOUBLE"/>
		<id property="monthApplicantDatetime" column="month_applicantDatetime" jdbcType="VARCHAR"/>
		<id property="yearApplicantDatetime" column="year_applicantDatetime" jdbcType="VARCHAR"/>
		<id property="quarterApplicantDatetime" column="quarter_applicantDatetime" jdbcType="VARCHAR"/>
		
		<id property="mainCategory1Name" column="main_category1Name" jdbcType="VARCHAR"/>
		<id property="customerName" column="customerName" jdbcType="VARCHAR"/>
		<id property="sumTotalRmbAmount" column="sum_totalRmbAmount" jdbcType="DOUBLE"/>
		<id property="pIndex" column="pIndex" jdbcType="INTEGER"/>
		
	</resultMap>
	<resultMap id="WithPurchaseItem" type="PurchaseImpl" extends="PurchaseMapper">
		<collection property="listPurchaseItem" javaType="java.util.List" ofType="PurchaseItemImpl">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="item_category1Id" property="category1Id" jdbcType="VARCHAR" />
			<result column="item_category1Name" property="category1Name" jdbcType="VARCHAR" />
			<result column="item_category2Id" property="category2Id" jdbcType="VARCHAR" />
			<result column="item_category2Name" property="category2Name" jdbcType="VARCHAR" />
			<result column="item_description" property="description" jdbcType="VARCHAR" />
			<result column="item_divisionId" property="divisionId" jdbcType="VARCHAR" />
			<result column="item_divisionName" property="divisionName" jdbcType="VARCHAR" />
			<result column="item_customerId" property="customerId" jdbcType="VARCHAR" />
			<result column="item_customerName" property="customerName" jdbcType="VARCHAR" />
			<result column="item_quoteAmount" property="quoteAmount" jdbcType="DOUBLE" />
		</collection>
	</resultMap>
	<!-- 添加实体对象 -->
	<insert id="insert" parameterType="purchase">
		INSERT INTO purchase
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					id,
				</if>
				<if test="no != null">
					no,
				</if>
				<if test="applicantId != null">
					applicantId,
				</if>
				<if test="applicantName != null">
					applicantName,
				</if>
				<if test="applicantdivisionId != null">
					applicantdivisionId,
				</if>
				<if test="applicantdivisionName != null">
					applicantdivisionName,
				</if>
				<if test="applicantDatetime != null">
					applicantDatetime,
				</if>
				<if test="approvelV1UserId != null">
					approvelV1UserId,
				</if>
				<if test="approvelv1UserName != null">
					approvelv1UserName,
				</if>
				<if test="approveLv1UserDatetime != null">
					approveLv1UserDatetime,
				</if>
				<if test="specifiedlv1ApproveUserIds != null">
					specifiedlv1ApproveUserIds,
				</if>
				<if test="specifiedlv1ApproveUserNames != null">
					specifiedlv1ApproveUserNames,
				</if>
				<if test="quoteUserId != null">
					quoteUserId,
				</if>
				<if test="quoteUserName != null">
					quoteUserName,
				</if>
				<if test="quoteDatetime != null">
					quoteDatetime,
				</if>
				<if test="quoteComment != null">
					quoteComment,
				</if>
				<if test="quoteTotalAmount != null">
					quoteTotalAmount,
				</if>
				<if test="quoteCurrencyId != null">
					quoteCurrencyId,
				</if>
				<if test="exchangeRate != null">
					exchangeRate,
				</if>
				<if test="totalRmbAmount != null">
					totalRmbAmount,
				</if>
				<if test="isQuoted != null">
					isQuoted,
				</if>
				<if test="specifiedlv2ApproveUserIds != null">
					specifiedlv2ApproveUserIds,
				</if>
				<if test="specifiedlv2ApproveUserNames != null">
					specifiedlv2ApproveUserNames,
				</if>
				<if test="approvelV2UserId != null">
					approvelV2UserId,
				</if>
				<if test="approvelv2UserName != null">
					approvelv2UserName,
				</if>
				<if test="approveLv2UserDatetime != null">
					approveLv2UserDatetime,
				</if>
				<if test="reqLevel != null">
					reqLevel,
				</if>
				<if test="appLevel != null">
					appLevel,
				</if>
				<if test="status != null">
					status,
				</if>
				<if test="createUserId != null">
					createUserId,
				</if>
				<if test="createUserName != null">
					createUserName,
				</if>
				<if test="createDatetime != null">
					createDatetime,
				</if>
				<if test="updateUserId != null">
					updateUserId,
				</if>
				<if test="updateUserName != null">
					updateUserName,
				</if>
				<if test="updateDatetime != null">
					updateDatetime,
				</if>
			</trim>
			<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
				<if test="id != null">
					#{id},
				</if>
				<if test="no != null">
					#{no},
				</if>
				<if test="applicantId != null">
					#{applicantId},
				</if>
				<if test="applicantName != null">
					#{applicantName},
				</if>
				<if test="applicantdivisionId != null">
					#{applicantdivisionId},
				</if>
				<if test="applicantdivisionName != null">
					#{applicantdivisionName},
				</if>
				<if test="applicantDatetime != null">
					#{applicantDatetime},
				</if>
				<if test="approvelV1UserId != null">
					#{approvelV1UserId},
				</if>
				<if test="approvelv1UserName != null">
					#{approvelv1UserName},
				</if>
				<if test="approveLv1UserDatetime != null">
					#{approveLv1UserDatetime},
				</if>
				<if test="specifiedlv1ApproveUserIds != null">
					#{specifiedlv1ApproveUserIds},
				</if>
				<if test="specifiedlv1ApproveUserNames != null">
					#{specifiedlv1ApproveUserNames},
				</if>
				<if test="quoteUserId != null">
					#{quoteUserId},
				</if>
				<if test="quoteUserName != null">
					#{quoteUserName},
				</if>
				<if test="quoteDatetime != null">
					#{quoteDatetime},
				</if>
				<if test="quoteComment != null">
					#{quoteComment},
				</if>
				<if test="quoteTotalAmount != null">
					#{quoteTotalAmount},
				</if>
				<if test="quoteCurrencyId != null">
					#{quoteCurrencyId},
				</if>
				<if test="exchangeRate != null">
					#{exchangeRate},
				</if>
				<if test="totalRmbAmount != null">
					#{totalRmbAmount},
				</if>
				<if test="isQuoted != null">
					#{isQuoted},
				</if>
				<if test="specifiedlv2ApproveUserIds != null">
					#{specifiedlv2ApproveUserIds},
				</if>
				<if test="specifiedlv2ApproveUserNames != null">
					#{specifiedlv2ApproveUserNames},
				</if>
				<if test="approvelV2UserId != null">
					#{approvelV2UserId},
				</if>
				<if test="approvelv2UserName != null">
					#{approvelv2UserName},
				</if>
				<if test="approveLv2UserDatetime != null">
					#{approveLv2UserDatetime},
				</if>
				<if test="reqLevel != null">
					#{reqLevel},
				</if>
				<if test="appLevel != null">
					#{appLevel},
				</if>
				<if test="status != null">
					#{status},
				</if>
				<if test="createUserId != null">
					#{createUserId},
				</if>
				<if test="createUserName != null">
					#{createUserName},
				</if>
				<if test="createDatetime != null">
					#{createDatetime},
				</if>
				<if test="updateUserId != null">
					#{updateUserId},
				</if>
				<if test="updateUserName != null">
					#{updateUserName},
				</if>
				<if test="updateDatetime != null">
					#{updateDatetime},
				</if>
			</trim>
	</insert>

	<!-- 删除实体对象 -->
	<delete id="delete" parameterType="java.lang.Object">
		DELETE FROM purchase
		WHERE
			id = #{id}
	</delete>

	<!-- 更新实体对象 -->
	<update id="update" parameterType="java.lang.Object">
		UPDATE purchase
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="no != null">
				no = #{no},
			</if>
			<if test="applicantId != null">
				applicantId = #{applicantId},
			</if>
			<if test="applicantName != null">
				applicantName = #{applicantName},
			</if>
			<if test="applicantdivisionId != null">
				applicantdivisionId = #{applicantdivisionId},
			</if>
			<if test="applicantdivisionName != null">
				applicantdivisionName = #{applicantdivisionName},
			</if>
			<if test="applicantDatetime != null">
				applicantDatetime = #{applicantDatetime},
			</if>
			<if test="approvelV1UserId != null">
				approvelV1UserId = #{approvelV1UserId},
			</if>
			<if test="approvelv1UserName != null">
				approvelv1UserName = #{approvelv1UserName},
			</if>
			<if test="approveLv1UserDatetime != null">
				approveLv1UserDatetime = #{approveLv1UserDatetime},
			</if>
			<if test="specifiedlv1ApproveUserIds != null">
				specifiedlv1ApproveUserIds = #{specifiedlv1ApproveUserIds},
			</if>
			<if test="specifiedlv1ApproveUserNames != null">
				specifiedlv1ApproveUserNames = #{specifiedlv1ApproveUserNames},
			</if>
			<if test="quoteUserId != null">
				quoteUserId = #{quoteUserId},
			</if>
			<if test="quoteUserName != null">
				quoteUserName = #{quoteUserName},
			</if>
			<if test="quoteDatetime != null">
				quoteDatetime = #{quoteDatetime},
			</if>
			<if test="quoteComment != null">
				quoteComment = #{quoteComment},
			</if>
			<if test="quoteTotalAmount != null">
				quoteTotalAmount = #{quoteTotalAmount},
			</if>
			<if test="quoteCurrencyId != null">
				quoteCurrencyId = #{quoteCurrencyId},
			</if>
			<if test="exchangeRate != null">
				exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="isQuoted != null">
				isQuoted = #{isQuoted},
			</if>
			<if test="specifiedlv2ApproveUserIds != null">
				specifiedlv2ApproveUserIds = #{specifiedlv2ApproveUserIds},
			</if>
			<if test="specifiedlv2ApproveUserNames != null">
				specifiedlv2ApproveUserNames = #{specifiedlv2ApproveUserNames},
			</if>
			<if test="approvelV2UserId != null">
				approvelV2UserId = #{approvelV2UserId},
			</if>
			<if test="approvelv2UserName != null">
				approvelv2UserName = #{approvelv2UserName},
			</if>
			<if test="approveLv2UserDatetime != null">
				approveLv2UserDatetime = #{approveLv2UserDatetime},
			</if>
			<if test="reqLevel != null">
				reqLevel = #{reqLevel},
			</if>
			<if test="appLevel != null">
				appLevel = #{appLevel},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="createUserId != null">
				createUserId = #{createUserId},
			</if>
			<if test="createUserName != null">
				createUserName = #{createUserName},
			</if>
			<if test="createDatetime != null">
				createDatetime = #{createDatetime},
			</if>
			<if test="updateUserId != null">
				updateUserId = #{updateUserId},
			</if>
			<if test="updateUserName != null">
				updateUserName = #{updateUserName},
			</if>
			<if test="updateDatetime != null">
				updateDatetime = #{updateDatetime},
			</if>
		</set>
		WHERE
			id = #{id}
			<if test="original != null">
				 AND modified = #{original}
			</if>
	</update>

	<!-- 查询单个实体对象 -->
	<select id="get" parameterType="java.lang.Object" resultMap="purchase">
		SELECT 
			id, 
			no, 
			applicantId, 
			applicantName, 
			applicantdivisionId, 
			applicantdivisionName, 
			applicantDatetime, 
			approvelV1UserId, 
			approvelv1UserName, 
			approveLv1UserDatetime,
			specifiedlv1ApproveUserIds, 
			specifiedlv1ApproveUserNames,
			quoteUserId, 
			quoteUserName, 
			quoteDatetime, 
			quoteComment, 
			quoteTotalAmount, 
			quoteCurrencyId, 
			exchangeRate,
			totalRmbAmount,
			specifiedlv2ApproveUserIds, 
			specifiedlv2ApproveUserNames, 
			approvelV2UserId, 
			approvelv2UserName, 
			approveLv2UserDatetime, 
			reqLevel,
			appLevel,
			status, 
			createUserId, 
			createUserName, 
			createDatetime, 
			updateUserId, 
			updateUserName, 
			updateDatetime
		FROM purchase
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="no != null">
				AND no = #{no}
			</if>
			<if test="applicantId != null">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantdivisionId != null">
				AND applicantdivisionId = #{applicantdivisionId}
			</if>
			<if test="applicantdivisionName != null">
				AND applicantdivisionName = #{applicantdivisionName}
			</if>
			<if test="applicantDatetime != null">
				AND applicantDatetime = #{applicantDatetime}
			</if>
			<if test="approvelV1UserId != null">
				AND approvelV1UserId = #{approvelV1UserId}
			</if>
			<if test="approvelv1UserName != null">
				AND approvelv1UserName = #{approvelv1UserName}
			</if>
			<if test="approveLv1UserDatetime != null">
				AND approveLv1UserDatetime = #{approveLv1UserDatetime}
			</if>
			<if test="specifiedlv2ApproveUserIds != null">
				AND specifiedlv2ApproveUserIds = #{specifiedlv2ApproveUserIds}
			</if>
			<if test="specifiedlv2ApproveUserNames != null">
				AND specifiedlv2ApproveUserNames = #{specifiedlv2ApproveUserNames}
			</if>
			<if test="quoteUserId != null">
				AND quoteUserId = #{quoteUserId}
			</if>
			<if test="quoteUserName != null">
				AND quoteUserName = #{quoteUserName}
			</if>
			<if test="quoteDatetime != null">
				AND quoteDatetime = #{quoteDatetime}
			</if>
			<if test="quoteComment != null">
				AND quoteComment = #{quoteComment}
			</if>
			<if test="quoteCurrencyId != null">
				AND quoteCurrencyId = #{quoteCurrencyId}
			</if>
			<if test="specifiedlv2ApproveUserIds != null">
				AND specifiedlv2ApproveUserIds = #{specifiedlv2ApproveUserIds}
			</if>
			<if test="specifiedlv2ApproveUserNames != null">
				AND specifiedlv2ApproveUserNames = #{specifiedlv2ApproveUserNames}
			</if>
			<if test="approvelV2UserId != null">
				AND approvelV2UserId = #{approvelV2UserId}
			</if>
			<if test="approvelv2UserName != null">
				AND approvelv2UserName = #{approvelv2UserName}
			</if>
			<if test="approveLv2UserDatetime != null">
				AND approveLv2UserDatetime = #{approveLv2UserDatetime}
			</if>
			<if test="reqLevel != null">
				AND reqLevel = #{reqLevel}
			</if>
			<if test="appLevel != null">
				AND appLevel = #{appLevel}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="createUserId != null">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null">
				AND updateDatetime = #{updateDatetime}
			</if>
		</where>
		LIMIT 1
	</select>

	<!-- 查询实体对象集合 -->
	<select id="select" parameterType="java.lang.Object" resultMap="purchase">
		SELECT 
			id, 
			no, 
			applicantId, 
			applicantName, 
			applicantdivisionId, 
			applicantdivisionName, 
			applicantDatetime, 
			approvelV1UserId, 
			approvelv1UserName, 
			approveLv1UserDatetime,
			specifiedlv1ApproveUserIds, 
			specifiedlv1ApproveUserNames,
			quoteUserId, 
			quoteUserName, 
			quoteDatetime, 
			quoteComment, 
			quoteTotalAmount, 
			quoteCurrencyId, 
			exchangeRate,
			totalRmbAmount, 
			specifiedlv2ApproveUserIds, 
			specifiedlv2ApproveUserNames, 
			approvelV2UserId, 
			approvelv2UserName, 
			approveLv2UserDatetime, 
			reqLevel,
			appLevel,
			status, 
			createUserId, 
			createUserName, 
			createDatetime, 
			updateUserId, 
			updateUserName, 
			updateDatetime
		FROM purchase
		<where>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="no != null and no != ''">
				AND no = #{no}
			</if>
			<if test="applicantId != null and applicantId != ''">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null and applicantName != ''">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantdivisionId != null and applicantdivisionId != ''">
				AND applicantdivisionId = #{applicantdivisionId}
			</if>
			<if test="applicantdivisionName != null and applicantdivisionName != ''">
				AND applicantdivisionName = #{applicantdivisionName}
			</if>
			<if test="applicantDatetime != null and applicantDatetime != ''">
				AND applicantDatetime = #{applicantDatetime}
			</if>
			<if test="approvelV1UserId != null and approvelV1UserId != ''">
				AND approvelV1UserId = #{approvelV1UserId}
			</if>
			<if test="approvelv1UserName != null and approvelv1UserName != ''">
				AND approvelv1UserName = #{approvelv1UserName}
			</if>
			<if test="approveLv1UserDatetime != null and approveLv1UserDatetime != ''">
				AND approveLv1UserDatetime = #{approveLv1UserDatetime}
			</if>
			<if test="specifiedlv1ApproveUserIds != null and specifiedlv1ApproveUserIds != ''">
				AND specifiedlv1ApproveUserIds = #{specifiedlv1ApproveUserIds}
			</if>
			<if test="specifiedlv1ApproveUserNames != null and specifiedlv1ApproveUserNames != ''">
				AND specifiedlv1ApproveUserNames = #{specifiedlv1ApproveUserNames}
			</if>
			<if test="quoteUserId != null and quoteUserId != ''">
				AND quoteUserId = #{quoteUserId}
			</if>
			<if test="quoteUserName != null and quoteUserName != ''">
				AND quoteUserName = #{quoteUserName}
			</if>
			<if test="quoteDatetime != null and quoteDatetime != ''">
				AND quoteDatetime = #{quoteDatetime}
			</if>
			<if test="quoteComment != null and quoteComment != ''">
				AND quoteComment = #{quoteComment}
			</if>
			<if test="quoteTotalAmount != null and quoteTotalAmount != ''">
				AND quoteTotalAmount = #{quoteTotalAmount}
			</if>
			<if test="quoteCurrencyId != null and quoteCurrencyId != ''">
				AND quoteCurrencyId = #{quoteCurrencyId}
			</if>
			<if test="exchangeRate != null">
				exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="specifiedlv2ApproveUserIds != null and specifiedlv2ApproveUserIds != ''">
				AND specifiedlv2ApproveUserIds = #{specifiedlv2ApproveUserIds}
			</if>
			<if test="specifiedlv2ApproveUserNames != null and specifiedlv2ApproveUserNames != ''">
				AND specifiedlv2ApproveUserNames = #{specifiedlv2ApproveUserNames}
			</if>
			<if test="approvelV2UserId != null and approvelV2UserId != ''">
				AND approvelV2UserId = #{approvelV2UserId}
			</if>
			<if test="approvelv2UserName != null and approvelv2UserName != ''">
				AND approvelv2UserName = #{approvelv2UserName}
			</if>
			<if test="approveLv2UserDatetime != null and approveLv2UserDatetime != ''">
				AND approveLv2UserDatetime = #{approveLv2UserDatetime}
			</if>
			<if test="reqLevel != null ">
				AND reqLevel = #{reqLevel}
			</if>
			<if test="appLevel != null ">
				AND appLevel = #{appLevel}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="createUserId != null and createUserId != ''">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null and createUserName != ''">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null and createDatetime != ''">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null and updateUserName != ''">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null and updateDatetime != ''">
				AND updateDatetime = #{updateDatetime}
			</if>
			<if test="sort != null">
				ORDER BY ${sort} ${order}
			</if>
		</where>
		<if test="rows != 0">
			LIMIT ${startIndex}, ${rows}
		</if>
	</select>

	<!-- 查询实体对象记录数 -->
	<select id="count" parameterType="java.lang.Object" resultType="int">
		SELECT COUNT(1) FROM purchase
		<where>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="no != null and no != ''">
				AND no = #{no}
			</if>
			<if test="applicantId != null and applicantId != ''">
				AND applicantId = #{applicantId}
			</if>
			<if test="applicantName != null and applicantName != ''">
				AND applicantName = #{applicantName}
			</if>
			<if test="applicantdivisionId != null and applicantdivisionId != ''">
				AND applicantdivisionId = #{applicantdivisionId}
			</if>
			<if test="applicantdivisionName != null and applicantdivisionName != ''">
				AND applicantdivisionName = #{applicantdivisionName}
			</if>
			<if test="applicantDatetime != null and applicantDatetime != ''">
				AND applicantDatetime = #{applicantDatetime}
			</if>
			<if test="approvelV1UserId != null and approvelV1UserId != ''">
				AND approvelV1UserId = #{approvelV1UserId}
			</if>
			<if test="approvelv1UserName != null and approvelv1UserName != ''">
				AND approvelv1UserName = #{approvelv1UserName}
			</if>
			<if test="approveLv1UserDatetime != null and approveLv1UserDatetime != ''">
				AND approveLv1UserDatetime = #{approveLv1UserDatetime}
			</if>
			<if test="specifiedlv1ApproveUserIds != null and specifiedlv1ApproveUserIds != ''">
				AND specifiedlv1ApproveUserIds = #{specifiedlv1ApproveUserIds}
			</if>
			<if test="specifiedlv1ApproveUserNames != null and specifiedlv1ApproveUserNames != ''">
				AND specifiedlv1ApproveUserNames = #{specifiedlv1ApproveUserNames}
			</if>
			<if test="quoteUserId != null and quoteUserId != ''">
				AND quoteUserId = #{quoteUserId}
			</if>
			<if test="quoteUserName != null and quoteUserName != ''">
				AND quoteUserName = #{quoteUserName}
			</if>
			<if test="quoteDatetime != null and quoteDatetime != ''">
				AND quoteDatetime = #{quoteDatetime}
			</if>
			<if test="quoteComment != null and quoteComment != ''">
				AND quoteComment = #{quoteComment}
			</if>
			<if test="quoteTotalAmount != null and quoteTotalAmount != ''">
				AND quoteTotalAmount = #{quoteTotalAmount}
			</if>
			<if test="quoteCurrencyId != null and quoteCurrencyId != ''">
				AND quoteCurrencyId = #{quoteCurrencyId}
			</if>
			<if test="exchangeRate != null">
				exchangeRate = #{exchangeRate},
			</if>
			<if test="totalRmbAmount != null">
				totalRmbAmount = #{totalRmbAmount},
			</if>
			<if test="specifiedlv2ApproveUserIds != null and specifiedlv2ApproveUserIds != ''">
				AND specifiedlv2ApproveUserIds = #{specifiedlv2ApproveUserIds}
			</if>
			<if test="specifiedlv2ApproveUserNames != null and specifiedlv2ApproveUserNames != ''">
				AND specifiedlv2ApproveUserNames = #{specifiedlv2ApproveUserNames}
			</if>
			<if test="approvelV2UserId != null and approvelV2UserId != ''">
				AND approvelV2UserId = #{approvelV2UserId}
			</if>
			<if test="approvelv2UserName != null and approvelv2UserName != ''">
				AND approvelv2UserName = #{approvelv2UserName}
			</if>
			<if test="approveLv2UserDatetime != null and approveLv2UserDatetime != ''">
				AND approveLv2UserDatetime = #{approveLv2UserDatetime}
			</if>
			<if test="reqLevel != null ">
				AND reqLevel = #{reqLevel}
			</if>
			<if test="appLevel != null ">
				AND appLevel = #{appLevel}
			</if>
			<if test="status != null ">
				AND status = #{status}
			</if>
			<if test="createUserId != null and createUserId != ''">
				AND createUserId = #{createUserId}
			</if>
			<if test="createUserName != null and createUserName != ''">
				AND createUserName = #{createUserName}
			</if>
			<if test="createDatetime != null and createDatetime != ''">
				AND createDatetime = #{createDatetime}
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				AND updateUserId = #{updateUserId}
			</if>
			<if test="updateUserName != null and updateUserName != ''">
				AND updateUserName = #{updateUserName}
			</if>
			<if test="updateDatetime != null and updateDatetime != ''">
				AND updateDatetime = #{updateDatetime}
			</if>
		</where>
	</select>
	
	<select id="selectWithItem" parameterType="java.lang.Object" resultMap="WithPurchaseItem" >
		SELECT 
			pu.*,
			pui.id AS item_id,
			pui.category1Id  AS item_category1Id,
			pui.category1Name  AS item_category1Name,
			pui.category2Id  AS item_category2Id,
			pui.category2Name  AS item_category2Name,
			pui.description  AS item_description,
			pui.divisionId AS item_divisionId, 
			pui.divisionName AS item_divisionName,
			pui.customerId AS item_customerId,
			pui.customerName AS item_customerName,
			pui.quoteAmount AS item_quoteAmount
			FROM purchase pu
		INNER JOIN purchaseItem pui ON pu.id = pui.purchaseId
		WHERE 1 = 1
		<if test="record != null" >
			<if test="record.createUserId != null and record.createUserId != ''">
				AND pu.createUserId = #{record.createUserId}
			</if>
			<if test="record.no != null and record.no != ''">
				AND pu.no LIKE CONCAT('%', CONCAT(#{record.no}, '%'))
			</if>
			<if test="record.applicantName != null and record.applicantName != ''">
				AND pu.applicantName LIKE CONCAT('%', CONCAT(#{record.applicantName}, '%'))
			</if>
			<if test="record.applicantdivisionId != null and record.applicantdivisionId != ''">
				AND pu.applicantdivisionId = #{record.applicantdivisionId}
			</if>
			
			<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
				 AND UNIX_TIMESTAMP(pu.applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
			</if>
			<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
				 AND UNIX_TIMESTAMP(pu.applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
			</if>
			
			<if test="record.approvelV2UserId != null and record.approvelV2UserId != '' and record.approvelV1UserId != null and record.approvelV1UserId != ''">
				AND (pu.approvelV2UserId = #{record.approvelV2UserId}
				OR pu.approvelV1UserId = #{record.approvelV1UserId} AND pu.approvelV2UserId is null)
			</if>
			
			<!-- <if test="record.quoteTotalAmount != null " >
				AND pu.quoteTotalAmount &gt;= #{record.quoteTotalAmount}
			</if> -->
			
			<if test="categoryIds != null and categoryIds != ''">
				<if test="categoryIds.size == 0" >
					AND 1 = 2
				</if>
				<if test="categoryIds.size &gt; 0" >
					AND pui.category2Id IN
					<foreach collection="categoryIds" item="categoryId" open="(" separator="," close=")">
						#{categoryId}
					</foreach>
				</if>
			</if>
			<choose>
				<when test="record.statusGroup == 2 or record.statusGroup == 3">
					<choose>
						<when test="record.specifiedlv2ApproveUserIds != null">
							AND pu.specifiedlv2ApproveUserIds LIKE CONCAT('%', CONCAT(#{record.specifiedlv2ApproveUserIds}, '%'))
						</when>
						<when test="record.specifiedlv1ApproveUserIds != null">
							AND pu.specifiedlv1ApproveUserIds LIKE CONCAT('%', CONCAT(#{record.specifiedlv1ApproveUserIds}, '%'))
						</when>
					</choose>
				</when>
				<!-- <when test="record.statusGroup == 4">
					AND (
					pu.specifiedlv2ApproveUserIds LIKE CONCAT('%', CONCAT(#{record.specifiedlv2ApproveUserIds}, '%'))
					OR pu.specifiedlv1ApproveUserIds LIKE CONCAT('%', CONCAT(#{record.specifiedlv1ApproveUserIds}, '%'))
					)
				</when> -->
			</choose>
			
			<if test="record.statusGroup != null and record.statusGroup != ''">
				<choose>
					<when test="record.statusGroup == 1">
						<choose>
							<when test="statuses != null">
								AND pu.status IN
								<foreach collection="statuses" item="status" open="(" separator="," close=")">
									#{status}
								</foreach>
							</when>
							<otherwise> 
								AND pu.status in(0, 1, 2, 3, 4, 5, 6, 8)
							</otherwise>
						</choose>
						AND pu.isQuoted = 0
					</when>
					<when test="record.statusGroup == 2">
						AND pu.status = 1
					</when>
					<when test="record.statusGroup == 3">
						AND pu.status = 3
					</when>
					<when test="record.statusGroup == 4">
						<choose>
							<when test="statuses != null">
								AND pu.status IN
								<foreach collection="statuses" item="status" open="(" separator="," close=")">
									#{status}
								</foreach>
								AND (pu.reqLevel &gt;= 1 OR pu.appLevel &gt;= 1)
							</when>
							<otherwise> 
								AND pu.status in(1, 2, 3, 4, 5, 6)
								AND (pu.reqLevel &gt;= 1 OR pu.appLevel &gt;= 1)
							</otherwise>
						</choose>
					</when>
					<when test="record.statusGroup == 5">
						AND pu.status = 2
					</when>
					<when test="record.statusGroup == 6">
						AND pu.status = 4
					</when>
					<when test="record.statusGroup == 7">
						<choose>
							<when test="statuses != null">
								AND pu.status IN
								<foreach collection="statuses" item="status" open="(" separator="," close=")">
									#{status}
								</foreach>
							</when>
							<otherwise> 
								AND pu.status in(3, 5, 6)
							</otherwise>
						</choose>
					</when>
					<when test="record.statusGroup == 8">
						<choose>
							<when test="statuses != null">
								AND pu.status IN
								<foreach collection="statuses" item="status" open="(" separator="," close=")">
									#{status}
								</foreach>
							</when>
							<otherwise> 
								AND pu.status in(0, 3, 4, 5, 6, 8)
							</otherwise>
						</choose>
						AND pu.isQuoted = 1
					</when>
					<when test="record.statusGroup == 9">
						<choose>
							<when test="statuses != null">
								AND pu.status IN
								<foreach collection="statuses" item="status" open="(" separator="," close=")">
									#{status}
								</foreach>
							</when>
							<otherwise> 
								AND pu.status in(4, 5, 6)
							</otherwise>
						</choose>
						<!-- AND pu.status = 6 -->
						AND ((pu.totalRmbAmount &lt; ${record.totalRmbAmount}) OR (pui.category2Id = ${category2Id}))
					</when>
					<otherwise> 
						AND 1 = 2
					</otherwise>
				</choose>
			</if>
			<if test="record.statusGroup == null or record.statusGroup == ''">
					AND pu.status = 10
			</if>
		</if>
		<if test="record.sort != null">
				ORDER BY ${record.sort} ${record.order},pui.index ASC
		</if>
		<if test="record.rows != 0">
			LIMIT ${record.startIndex}, ${record.rows}
		</if>
	</select>
	
	<select id="selectByUserId" parameterType="java.lang.Object" resultMap="WithPurchaseItem">
		SELECT 
			pur.id, 
			pur.no, 
			pur.applicantId, 
			pur.applicantName, 
			pur.applicantdivisionId, 
			pur.applicantdivisionName, 
			pur.applicantDatetime, 
			pur.approvelV1UserId, 
			pur.approvelv1UserName, 
			pur.approveLv1UserDatetime,
			pur.specifiedlv1ApproveUserIds, 
			pur.specifiedlv1ApproveUserNames, 
			pur.quoteUserId, 
			pur.quoteUserName, 
			pur.quoteDatetime, 
			pur.quoteComment, 
			pur.quoteTotalAmount, 
			pur.quoteCurrencyId,
			pur.exchangeRate,
			pur.totalRmbAmount, 
			pur.specifiedlv2ApproveUserIds, 
			pur.specifiedlv2ApproveUserNames, 
			pur.approvelV2UserId, 
			pur.approvelv2UserName, 
			pur.approveLv2UserDatetime,
			pur.reqLevel, 
			pur.appLevel,  
			pur.status, 
			pur.createUserId, 
			pur.createUserName, 
			pur.createDatetime, 
			pur.updateUserId, 
			pur.updateUserName, 
			pur.updateDatetime,
			pui.id AS item_id,
			pui.description  AS item_description,
			pui.divisionId AS item_divisionId, 
			pui.divisionName AS item_divisionName,
			pui.customerId AS item_customerId,
			pui.customerName AS item_customerName,
			pui.category1Id AS item_category1Id,
			pui.category1Name AS item_category1Name,
			pui.category2Id AS item_category2Id,
			pui.category2Name AS item_category2Name,
			pui.quoteAmount AS item_quoteAmount
		FROM purchase pur
		LEFT JOIN purchaseItem pui ON pur.id = pui.purchaseId
		INNER JOIN purchaseWatcher pw ON pur.id  = pw.purchaseId
		<where> 
			<if test="statuses != null">
				AND pur.status IN
				<foreach collection="statuses" item="status" open="(" separator="," close=")">
					#{status}
				</foreach>
			</if>
			<if test="record != null" >
					AND pw.userId = #{record.userId}
				<if test="record.no != null and record.no != ''">
					AND pur.no LIKE CONCAT('%', CONCAT(#{record.no}, '%'))
				</if>
				<if test="record.applicantName != null and record.applicantName != ''">
					AND pur.applicantName LIKE CONCAT('%', CONCAT(#{record.applicantName}, '%'))
				</if>
				<if test="record.applicantdivisionId != null and record.applicantdivisionId != ''">
					AND pur.applicantdivisionId = #{record.applicantdivisionId}
				</if>
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					 AND UNIX_TIMESTAMP(pur.applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(pur.applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
			</if>
			
			<if test="record.sort != null">
				ORDER BY ${record.sort} ${record.order}, pui.index ASC
			</if>
		</where>
		<if test="record.rows != 0">
			LIMIT ${record.startIndex}, ${record.rows}
		</if>
	</select>
	
	<select id="selectForReport" parameterType="java.lang.Object" resultMap="WithPurchaseItem">
	SELECT  sum(p.exchangeRate*p.quoteAmount) sum_totalAmount, p.applicantdivisionId, p.applicantdivisionName, 
			p.category1Name AS item_category1Name, p.category2Name AS item_category2Name,
			substring(p.applicantDatetime, 1, 7) AS month_applicantDatetime,
			substring(p.applicantDatetime, 1, 4) AS year_applicantDatetime,
			CONCAT(substring(p.applicantDatetime, 1, 4), '-Q', quarter(p.applicantDatetime)) AS quarter_applicantDatetime
 	FROM
 	(
		SELECT pur.id, pur.exchangeRate, pur.applicantdivisionId, pur.applicantdivisionName, pur.applicantDatetime,
					 pui.quoteAmount, pui.category1Name, pui.category2Name, pui.category2Id, pui.purchaseId
		FROM(
			SELECT pu.id, pu.exchangeRate, pu.applicantdivisionId, pu.applicantdivisionName, pu.applicantDatetime
			FROM purchase pu
			WHERE 1 = 1
			<if test="applicantdivisionIds != null">
				AND pu.applicantdivisionId IN
				<foreach collection="applicantdivisionIds" item="applicantdivisionId" open="(" separator="," close=")">
					#{applicantdivisionId}
				</foreach>
			</if>
			<if test="record != null" >
				<choose>
					<when test="record.purchaseStatus == 1">
						AND pu.status = 6
					</when>
					<when test="record.purchaseStatus == 2">
						AND pu.status &gt;=3 AND pu.status &lt;= 5
					</when>
				</choose>
				<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
					 AND UNIX_TIMESTAMP(pu.applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
				</if>
				<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
					 AND UNIX_TIMESTAMP(pu.applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
				</if>
			</if>
		) pur 
		INNER JOIN 
		(SELECT pi.quoteAmount, pi.category1Name, pi.category2Name, pi.category2Id, pi.purchaseId
		FROM purchaseItem pi
		WHERE 1 = 1
		<if test="categoryIds != null">
			AND pi.category2Id IN
			<foreach collection="categoryIds" item="categoryId" open="(" separator="," close=")">
				#{categoryId}
			</foreach>
		</if>
		) pui 
		ON pur.id = pui.purchaseId
	)  p
	GROUP BY p.applicantdivisionId, p.category2Id
	<!-- 时间可以不参加分类，逗号放前面 -->
	<choose>
		<when test="record.sortTime == 'year'">
			,substring(p.applicantDatetime,1,4)
		</when>
		<when test="record.sortTime == 'month'">
			,substring(p.applicantDatetime,1,7)
		</when>
		<when test="record.sortTime == 'quarter'">
			,substring(p.applicantDatetime,1,4), quarter(p.applicantDatetime) 
		</when>
		<otherwise>
		 
		</otherwise>
	</choose>
	</select>
	
	<select id="selectForMonthReportByApplicant" parameterType="java.lang.Object" resultMap="WithPurchaseItem">
	SELECT p2.* FROM
	(
		SELECT p.applicantName,'合计：' AS main_category1Name, SUM(p.totalRmbAmount) AS sum_totalRmbAmount, 2 AS pIndex
		FROM 
		( 
		SELECT * FROM purchase WHERE STATUS IN(4, 5, 6)
		<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
		</if>
		<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
		</if>
		) p
		INNER JOIN 
		(
		SELECT * FROM purchaseItem 
		WHERE customerId != ""
		)
		 pi ON p.id = pi.purchaseId
		GROUP BY p.applicantName
	) AS p2
	UNION ALL
	SELECT p1.* FROM
	(
		SELECT p.applicantName, pi.category1Name AS main_category1Name, SUM(p.totalRmbAmount) AS sum_totalRmbAmount, 1 AS pIndex
		FROM 
		( 
		SELECT * FROM purchase WHERE STATUS IN(4, 5, 6)
		<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
		</if>
		<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
		</if>
		) p
		INNER JOIN 
		(
		SELECT * FROM purchaseItem 
		WHERE customerId != ""
		)
		 pi ON p.id = pi.purchaseId
		GROUP BY p.applicantName, main_category1Name
	) AS p1
	ORDER BY applicantName DESC, pIndex ASC
	</select>
	
	<select id="selectForMonthReportByCustomer" parameterType="java.lang.Object" resultMap="WithPurchaseItem">
	SELECT p2.* FROM
	(
		SELECT pi.customerName, '合计：' AS main_category1Name, SUM(p.totalRmbAmount) AS sum_totalRmbAmount, 2 AS pIndex
		FROM
		( 
		SELECT * FROM purchase WHERE STATUS IN(4, 5, 6)
		<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
		</if>
		<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
		</if>
		) p
		INNER JOIN 
		(
		SELECT * FROM purchaseItem 
		WHERE customerId != ""
		)
		pi ON p.id = pi.purchaseId
		GROUP BY pi.customerName
	) AS p2
	UNION ALL
	SELECT p1.* FROM
	(
		SELECT pi.customerName, pi.category1Name AS main_category1Name, SUM(p.totalRmbAmount) AS sum_totalRmbAmount, 1 AS pIndex
		FROM 
		( 
		SELECT * FROM purchase WHERE STATUS IN(4, 5, 6)
		<if test="record.applicationDateFrom != null and record.applicationDateFrom != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &gt;= UNIX_TIMESTAMP(#{record.applicationDateFrom})
		</if>
		<if test="record.applicationDateTo != null and record.applicationDateTo != ''" >
			 AND UNIX_TIMESTAMP(applicantDatetime) &lt;= UNIX_TIMESTAMP(#{record.applicationDateTo})
		</if>
		) p
		INNER JOIN 
		(
		SELECT * FROM purchaseItem 
		WHERE customerId != ""
		)
		pi ON p.id = pi.purchaseId
		GROUP BY pi.customerName, pi.category1Name
	) AS p1
	ORDER BY customerName DESC, pIndex ASC
	</select>
	
</mapper>